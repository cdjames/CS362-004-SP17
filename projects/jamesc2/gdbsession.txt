[vagrant@localhost dominion]$ ./randomtestadventurer 

######################### Testing playAdventurer #########################

current card=1
current card=5
current card=16
current card=16
current card=13
current card=13
current card=7
current card=7
current card=19
current card=19
current card=11
current card=4
current card=22
current card=22
current card=10
current card=10
current card=2
current card=2
playing adventurer
    PASSED TEST 1, Return is 0: returned = 0, expected = 0
    PASSED TEST 2, Pre & post is same: memcmp pre/post = 0, expected = 0
    PASSED TEST 3, discard count matches: pre = 190, post = 190
    PASSED TEST 4, deck count same: pre = 0, post = 0
    PASSED TEST 5, hand count same: pre = 28, post = 28
    PASSED TEST 6, top card in hand same: pre = 5, post = 5
    PASSED TEST 7, top card in deck same: pre = -24307644, post = -24307644
    PASSED TEST 8, top card in discard same: pre = 2, post = 2

++++++++++++ SUCCESS - playAdventurer: 8/8 tests passed

[vagrant@localhost dominion]$ make clean
Makefile:64: warning: overriding recipe for target `test_helpers.o'
Makefile:37: warning: ignoring old recipe for target `test_helpers.o'
rm -f *.o randomtestadventurer randomtestcard1 randomtestcard2 cardtest1 cardtest2 cardtest3 cardtest4 unittest1 unittest2 unittest3 unittest4 playdom.exe playdom test.exe test player player.exe testInit testInit.exe *.gcov *.gcda *.gcno *.so
[vagrant@localhost dominion]$ make randomtestadventurer
Makefile:64: warning: overriding recipe for target `test_helpers.o'
Makefile:37: warning: ignoring old recipe for target `test_helpers.o'
gcc -c rngs.c -g  -Wall -fpic -coverage -lm
rngs.c: In function ‘TestRandom’:
rngs.c:161:10: warning: variable ‘u’ set but not used [-Wunused-but-set-variable]
   double u;
          ^
gcc -c test_helpers.c -g  -Wall -fpic -coverage -lm
gcc -fprofile-arcs -ftest-coverage -c dominion.c -g  -Wall -fpic -coverage -lm
gcc -o randomtestadventurer randomtestadventurer.c -g test_helpers.o dominion.o rngs.o -Wall -fpic -coverage -lm
randomtestadventurer.c: In function ‘main’:
randomtestadventurer.c:156:3: warning: unused variable ‘i’ [-Wunused-variable]
   i;
   ^
[vagrant@localhost dominion]$ ./randomtestadventurer 

######################### Testing playAdventurer #########################

current card=1
current card=1
current card=21
current card=21
current card=16
current card=16
current card=13
current card=13
current card=7
current card=7
current card=19
current card=19
current card=11
current card=11
current card=4
current card=23
current card=10
current card=10
playing adventurer
    PASSED TEST 1, Return is 0: returned = 0, expected = 0
    FAILED TEST 2, Pre & post is same: memcmp pre/post = 120, expected = 0
    FAILED TEST 3, discard count matches: pre = 188, post = 191
    FAILED TEST 4, deck count same: pre = 3, post = 0
    PASSED TEST 5, hand count same: pre = 27, post = 27
    PASSED TEST 6, top card in hand same: pre = 4, post = 4
    FAILED TEST 7, top card in deck same: pre = 21, post = -24307644
    PASSED TEST 8, top card in discard same: pre = 10, post = 10

------------ FAILURE - playAdventurer: 4/8 tests passed

[vagrant@localhost dominion]$ 
[vagrant@localhost dominion]$ make clean
Makefile:64: warning: overriding recipe for target `test_helpers.o'
Makefile:37: warning: ignoring old recipe for target `test_helpers.o'
rm -f *.o randomtestadventurer randomtestcard1 randomtestcard2 cardtest1 cardtest2 cardtest3 cardtest4 unittest1 unittest2 unittest3 unittest4 playdom.exe playdom test.exe test player player.exe testInit testInit.exe *.gcov *.gcda *.gcno *.so
[vagrant@localhost dominion]$ cd ../pfohljDominion/
[vagrant@localhost pfohljDominion]$ make clean
rm -f *.o randomtestadventurer randomtestcard1 randomtestcard2 cardtest1 cardtest2 cardtest3 cardtest4 unittest1 unittest2 unittest3 unittest4 playdom.exe playdom test.exe test player player.exe testInit testInit.exe *.gcov *.gcda *.gcno *.so
[vagrant@localhost pfohljDominion]$ cd ../dominion/
[vagrant@localhost dominion]$ ls
badTestDrawCard.c     Makefile                  randomtestcard2.c    testDrawCard.c
betterTestDrawCard.c  playdom.c                 randomtestcard2.out  test_helpers.c
dominion.c            player.c                  rngs.c               test_helpers.h
dominion.h            randomtestadventurer.c    rngs.h               testInit.c
dominion_helpers.h    randomtestadventurer.out  rt.c                 testShuffle.c
interface.c           randomtestcard1.c         supplyTest.c         unittestresults.out
interface.h           randomtestcard1.out       testBuyCard.c
[vagrant@localhost dominion]$ make randomtestadventurer
Makefile:64: warning: overriding recipe for target `test_helpers.o'
Makefile:37: warning: ignoring old recipe for target `test_helpers.o'
gcc -c rngs.c -g  -Wall -fpic -coverage -lm
rngs.c: In function ‘TestRandom’:
rngs.c:161:10: warning: variable ‘u’ set but not used [-Wunused-but-set-variable]
   double u;
          ^
gcc -c test_helpers.c -g  -Wall -fpic -coverage -lm
gcc -fprofile-arcs -ftest-coverage -c dominion.c -g  -Wall -fpic -coverage -lm
gcc -o randomtestadventurer randomtestadventurer.c -g test_helpers.o dominion.o rngs.o -Wall -fpic -coverage -lm
randomtestadventurer.c: In function ‘main’:
randomtestadventurer.c:156:3: warning: unused variable ‘i’ [-Wunused-variable]
   i;
   ^
[vagrant@localhost dominion]$ ./randomtestadventurer 

######################### Testing playAdventurer #########################

current card=1
current card=1
current card=21
current card=21
current card=16
current card=16
current card=13
current card=13
current card=7
current card=7
current card=19
current card=19
current card=11
current card=11
current card=4
current card=23
current card=10
current card=10
playing adventurer
    PASSED TEST 1, Return is 0: returned = 0, expected = 0
    FAILED TEST 2, Pre & post is same: memcmp pre/post = 120, expected = 0
    FAILED TEST 3, discard count matches: pre = 188, post = 191
    FAILED TEST 4, deck count same: pre = 3, post = 0
    PASSED TEST 5, hand count same: pre = 27, post = 27
    PASSED TEST 6, top card in hand same: pre = 4, post = 4
    FAILED TEST 7, top card in deck same: pre = 21, post = -24307644
    PASSED TEST 8, top card in discard same: pre = 10, post = 10

------------ FAILURE - playAdventurer: 4/8 tests passed

[vagrant@localhost dominion]$ make clean
Makefile:64: warning: overriding recipe for target `test_helpers.o'
Makefile:37: warning: ignoring old recipe for target `test_helpers.o'
rm -f *.o randomtestadventurer randomtestcard1 randomtestcard2 cardtest1 cardtest2 cardtest3 cardtest4 unittest1 unittest2 unittest3 unittest4 playdom.exe playdom test.exe test player player.exe testInit testInit.exe *.gcov *.gcda *.gcno *.so
[vagrant@localhost dominion]$ make randomtestadventurer
Makefile:64: warning: overriding recipe for target `test_helpers.o'
Makefile:37: warning: ignoring old recipe for target `test_helpers.o'
gcc -c rngs.c -g  -Wall -fpic -coverage -lm
rngs.c: In function ‘TestRandom’:
rngs.c:161:10: warning: variable ‘u’ set but not used [-Wunused-but-set-variable]
   double u;
          ^
gcc -c test_helpers.c -g  -Wall -fpic -coverage -lm
gcc -fprofile-arcs -ftest-coverage -c dominion.c -g  -Wall -fpic -coverage -lm
^[[A^[[Agcc -o randomtestadventurer randomtestadventurer.c -g test_helpers.o dominion.o rngs.o -Wall -fpic -coverage -lm
randomtestadventurer.c: In function ‘main’:
randomtestadventurer.c:156:3: warning: unused variable ‘i’ [-Wunused-variable]
   i;
   ^
[vagrant@localhost dominion]$ ./randomtestadventurer 

######################### Testing playAdventurer #########################

deckCount=9
current card=1
current card=1
current card=21
current card=21
current card=16
current card=16
current card=13
current card=13
current card=7
current card=7
current card=19
current card=19
current card=11
current card=11
current card=4
current card=23
current card=10
current card=10
playing adventurer
    PASSED TEST 1, Return is 0: returned = 0, expected = 0
    FAILED TEST 2, Pre & post is same: memcmp pre/post = 120, expected = 0
    FAILED TEST 3, discard count matches: pre = 188, post = 191
    FAILED TEST 4, deck count same: pre = 3, post = 0
    PASSED TEST 5, hand count same: pre = 27, post = 27
    PASSED TEST 6, top card in hand same: pre = 4, post = 4
    FAILED TEST 7, top card in deck same: pre = 21, post = -24307644
    PASSED TEST 8, top card in discard same: pre = 10, post = 10

------------ FAILURE - playAdventurer: 4/8 tests passed

[vagrant@localhost dominion]$ make clean
Makefile:64: warning: overriding recipe for target `test_helpers.o'
Makefile:37: warning: ignoring old recipe for target `test_helpers.o'
rm -f *.o randomtestadventurer randomtestcard1 randomtestcard2 cardtest1 cardtest2 cardtest3 cardtest4 unittest1 unittest2 unittest3 unittest4 playdom.exe playdom test.exe test player player.exe testInit testInit.exe *.gcov *.gcda *.gcno *.so
[vagrant@localhost dominion]$ make randomtestadventurer
Makefile:64: warning: overriding recipe for target `test_helpers.o'
Makefile:37: warning: ignoring old recipe for target `test_helpers.o'
gcc -c rngs.c -g  -Wall -fpic -coverage -lm
rngs.c: In function ‘TestRandom’:
rngs.c:161:10: warning: variable ‘u’ set but not used [-Wunused-but-set-variable]
   double u;
          ^
^[[Agcc -c test_helpers.c -g  -Wall -fpic -coverage -lm
^[[Agcc -fprofile-arcs -ftest-coverage -c dominion.c -g  -Wall -fpic -coverage -lm
^[[Agcc -o randomtestadventurer randomtestadventurer.c -g test_helpers.o dominion.o rngs.o -Wall -fpic -coverage -lm
randomtestadventurer.c: In function ‘main’:
randomtestadventurer.c:156:3: warning: unused variable ‘i’ [-Wunused-variable]
   i;
   ^
[vagrant@localhost dominion]$ ./randomtestadventurer 

######################### Testing playAdventurer #########################

deckCount=9
current card=1
current card=1
current card=21
current card=21
current card=16
current card=16
current card=13
current card=13
current card=7
current card=7
current card=19
current card=19
current card=11
current card=11
current card=4
current card=23
current card=10
current card=10
card at specialdeck=4
playing adventurer
    PASSED TEST 1, Return is 0: returned = 0, expected = 0
    FAILED TEST 2, Pre & post is same: memcmp pre/post = 120, expected = 0
    FAILED TEST 3, discard count matches: pre = 188, post = 191
    FAILED TEST 4, deck count same: pre = 3, post = 0
    PASSED TEST 5, hand count same: pre = 27, post = 27
    PASSED TEST 6, top card in hand same: pre = 4, post = 4
    FAILED TEST 7, top card in deck same: pre = 21, post = -24307644
    PASSED TEST 8, top card in discard same: pre = 10, post = 10

------------ FAILURE - playAdventurer: 4/8 tests passed

[vagrant@localhost dominion]$ make clean
Makefile:64: warning: overriding recipe for target `test_helpers.o'
Makefile:37: warning: ignoring old recipe for target `test_helpers.o'
rm -f *.o randomtestadventurer randomtestcard1 randomtestcard2 cardtest1 cardtest2 cardtest3 cardtest4 unittest1 unittest2 unittest3 unittest4 playdom.exe playdom test.exe test player player.exe testInit testInit.exe *.gcov *.gcda *.gcno *.so
[vagrant@localhost dominion]$ make randomtestadventurer
Makefile:64: warning: overriding recipe for target `test_helpers.o'
Makefile:37: warning: ignoring old recipe for target `test_helpers.o'
gcc -c rngs.c -g  -Wall -fpic -coverage -lm
rngs.c: In function ‘TestRandom’:
rngs.c:161:10: warning: variable ‘u’ set but not used [-Wunused-but-set-variable]
   double u;
          ^
gcc -c test_helpers.c -g  -Wall -fpic -coverage -lm
gcc -fprofile-arcs -ftest-coverage -c dominion.c -g  -Wall -fpic -coverage -lm
^[[Agcc -o randomtestadventurer randomtestadventurer.c -g test_helpers.o dominion.o rngs.o -Wall -fpic -coverage -lm
^[[A^[[Arandomtestadventurer.c: In function ‘main’:
randomtestadventurer.c:156:3: warning: unused variable ‘i’ [-Wunused-variable]
   i;
   ^
[vagrant@localhost dominion]$ ./randomtestadventurer 

######################### Testing playAdventurer #########################

card at specialdeck=4
current card=1
current card=1
current card=16
current card=16
current card=12
current card=12
current card=9
current card=9
current card=12
current card=12
current card=5
current card=19
current card=12
current card=12
current card=13
current card=13
current card=2
current card=2
current card=4
current card=14
current card=8
current card=8
current card=12
current card=12
current card=14
current card=14
current card=8
current card=8
current card=15
current card=15
current card=5
current card=9
current card=21
current card=21
current card=0
current card=0
current card=12
current card=12
current card=9
current card=9
current card=19
current card=19
current card=15
current card=15
current card=5
current card=11
current card=18
current card=18
current card=0
current card=0
current card=0
current card=0
current card=25
current card=25
current card=14
current card=14
current card=7
current card=7
current card=14
current card=14
current card=13
current card=13
current card=18
current card=18
current card=15
current card=15
current card=9
current card=9
current card=17
current card=17
current card=15
current card=15
current card=5
current card=12
current card=16
current card=16
current card=14
current card=14
current card=8
current card=8
current card=25
current card=25
current card=17
current card=17
current card=23
current card=23
current card=13
current card=13
current card=5
current card=12
current card=20
current card=20
current card=9
current card=9
current card=21
current card=21
current card=15
current card=15
current card=25
current card=25
current card=25
current card=25
current card=15
current card=15
current card=8
current card=8
current card=25
current card=25
current card=13
current card=13
current card=0
current card=0
current card=25
current card=25
current card=13
current card=13
current card=2
current card=2
current card=14
current card=14
current card=20
current card=20
current card=1
current card=1
current card=19
current card=19
current card=23
current card=23
current card=15
current card=15
current card=18
current card=18
current card=23
current card=23
current card=12
current card=12
current card=16
current card=16
current card=4
current card=23
current card=17
current card=17
current card=21
current card=21
current card=2
current card=2
current card=0
current card=0
current card=19
current card=19
current card=16
current card=16
current card=5
current card=9
current card=17
current card=17
current card=11
current card=11
current card=1
current card=1
current card=25
current card=25
current card=19
current card=19
current card=12
current card=12
current card=0
current card=0
current card=22
current card=22
current card=20
current card=20
current card=20
current card=20
current card=2
current card=2
current card=6
current card=21
current card=23
current card=23
current card=3
current card=3
current card=22
current card=22
current card=10
current card=10
current card=25
current card=25
current card=18
current card=18
current card=7
current card=7
current card=12
current card=12
current card=15
current card=15
current card=6
current card=15
current card=0
current card=0
current card=16
current card=16
current card=16
current card=16
current card=9
current card=9
current card=13
current card=13
current card=9
current card=9
current card=4
current card=9
current card=8
current card=8
current card=1
current card=1
current card=10
current card=10
current card=2
current card=2
current card=6
current card=17
current card=6
current card=21
current card=17
current card=17
current card=12
current card=12
current card=4
current card=9
current card=10
current card=10
current card=22
current card=22
current card=1
current card=1
current card=5
current card=20
current card=21
current card=21
current card=1
current card=1
current card=9
current card=9
current card=22
current card=22
current card=19
current card=19
current card=2
current card=2
current card=15
current card=15
current card=13
current card=13
current card=8
current card=8
current card=11
current card=11
current card=19
current card=19
current card=6
current card=7
current card=6
current card=7
current card=19
current card=19
current card=3
current card=3
current card=0
current card=0
current card=12
current card=12
current card=3
current card=3
current card=11
current card=11
current card=10
current card=10
current card=3
current card=3
current card=14
current card=14
current card=17
current card=17
current card=16
current card=16
current card=9
current card=9
current card=19
current card=19
current card=19
current card=19
current card=20
current card=20
current card=11
current card=11
current card=9
current card=9
current card=24
current card=24
current card=21
current card=21
current card=15
current card=15
current card=15
current card=15
current card=4
current card=12
current card=21
current card=21
current card=6
current card=8
current card=20
current card=20
current card=9
current card=9
current card=20
current card=20
current card=14
current card=14
current card=25
current card=25
current card=19
current card=19
current card=23
current card=23
current card=11
current card=11
current card=9
current card=9
current card=12
current card=12
current card=13
current card=13
current card=9
current card=9
current card=19
current card=19
current card=2
current card=2
current card=18
current card=18
current card=8
current card=8
current card=19
current card=19
current card=18
current card=18
current card=1
current card=1
current card=0
current card=0
current card=11
current card=11
current card=8
current card=8
current card=5
current card=12
current card=21
current card=21
current card=0
current card=0
current card=24
current card=24
current card=1
current card=1
playing adventurer
    PASSED TEST 1, Return is 0: returned = 0, expected = 0
    FAILED TEST 2, Pre & post is same: memcmp pre/post = 120, expected = 0
    FAILED TEST 3, discard count matches: pre = 188, post = 191
    FAILED TEST 4, deck count same: pre = 3, post = 0
    PASSED TEST 5, hand count same: pre = 27, post = 27
    PASSED TEST 6, top card in hand same: pre = 4, post = 4
    FAILED TEST 7, top card in deck same: pre = 21, post = -24307644
    PASSED TEST 8, top card in discard same: pre = 10, post = 10

------------ FAILURE - playAdventurer: 4/8 tests passed

[vagrant@localhost dominion]$ make clean
Makefile:64: warning: overriding recipe for target `test_helpers.o'
Makefile:37: warning: ignoring old recipe for target `test_helpers.o'
rm -f *.o randomtestadventurer randomtestcard1 randomtestcard2 cardtest1 cardtest2 cardtest3 cardtest4 unittest1 unittest2 unittest3 unittest4 playdom.exe playdom test.exe test player player.exe testInit testInit.exe *.gcov *.gcda *.gcno *.so
[vagrant@localhost dominion]$ make randomtestadventurer
Makefile:64: warning: overriding recipe for target `test_helpers.o'
Makefile:37: warning: ignoring old recipe for target `test_helpers.o'
gcc -c rngs.c -g  -Wall -fpic -coverage -lm
rngs.c: In function ‘TestRandom’:
rngs.c:161:10: warning: variable ‘u’ set but not used [-Wunused-but-set-variable]
   double u;
          ^
^[[Agcc -c test_helpers.c -g  -Wall -fpic -coverage -lm
^[[A^[[Agcc -fprofile-arcs -ftest-coverage -c dominion.c -g  -Wall -fpic -coverage -lm

gcc -o randomtestadventurer randomtestadventurer.c -g test_helpers.o dominion.o rngs.o -Wall -fpic -coverage -lm
randomtestadventurer.c: In function ‘main’:
randomtestadventurer.c:156:3: warning: unused variable ‘i’ [-Wunused-variable]
   i;
   ^
[vagrant@localhost dominion]$ ./randomtestadventurer 

######################### Testing playAdventurer #########################

card at specialdeck=4
current card=1
current card=16
current card=12
current card=9
current card=12
current card=19
current card=12
current card=13
current card=2
current card=14
current card=8
current card=12
current card=14
current card=8
current card=15
current card=9
current card=21
current card=0
current card=12
current card=9
current card=19
current card=15
current card=11
current card=18
current card=0
current card=0
current card=25
current card=14
current card=7
current card=14
current card=13
current card=18
current card=15
current card=9
current card=17
current card=15
current card=12
current card=16
current card=14
current card=8
current card=25
current card=17
current card=23
current card=13
current card=12
current card=20
current card=9
current card=21
current card=15
current card=25
current card=25
current card=15
current card=8
current card=25
current card=13
current card=0
current card=25
current card=13
current card=2
current card=14
current card=20
current card=1
current card=19
current card=23
current card=15
current card=18
current card=23
current card=12
current card=16
current card=23
current card=17
current card=21
current card=2
current card=0
current card=19
current card=16
current card=9
current card=17
current card=11
current card=1
current card=25
current card=19
current card=12
current card=0
current card=22
current card=20
current card=20
current card=2
current card=21
current card=23
current card=3
current card=22
current card=10
current card=25
current card=18
current card=7
current card=12
current card=15
current card=15
current card=0
current card=16
current card=16
current card=9
current card=13
current card=9
current card=9
current card=8
current card=1
current card=10
current card=2
current card=17
current card=21
current card=17
current card=12
current card=9
current card=10
current card=22
current card=1
current card=20
current card=21
current card=1
current card=9
current card=22
current card=19
current card=2
current card=15
current card=13
current card=8
current card=11
current card=19
current card=7
current card=7
current card=19
current card=3
current card=0
current card=12
current card=3
current card=11
current card=10
current card=3
current card=14
current card=17
current card=16
current card=9
current card=19
current card=19
current card=20
current card=11
current card=9
current card=24
current card=21
current card=15
current card=15
current card=12
current card=21
current card=8
current card=20
current card=9
current card=20
current card=14
current card=25
current card=19
current card=23
current card=11
current card=9
current card=12
current card=13
current card=9
current card=19
current card=2
current card=18
current card=8
current card=19
current card=18
current card=1
current card=0
current card=11
current card=8
current card=12
current card=21
current card=0
current card=24
current card=1
playing adventurer
    PASSED TEST 1, Return is 0: returned = 0, expected = 0
    FAILED TEST 2, Pre & post is same: memcmp pre/post = 120, expected = 0
    FAILED TEST 3, discard count matches: pre = 188, post = 191
    FAILED TEST 4, deck count same: pre = 3, post = 0
    PASSED TEST 5, hand count same: pre = 27, post = 27
    PASSED TEST 6, top card in hand same: pre = 4, post = 4
    FAILED TEST 7, top card in deck same: pre = 21, post = -24307644
    PASSED TEST 8, top card in discard same: pre = 10, post = 10

------------ FAILURE - playAdventurer: 4/8 tests passed

[vagrant@localhost dominion]$ make clean
Makefile:64: warning: overriding recipe for target `test_helpers.o'
Makefile:37: warning: ignoring old recipe for target `test_helpers.o'
rm -f *.o randomtestadventurer randomtestcard1 randomtestcard2 cardtest1 cardtest2 cardtest3 cardtest4 unittest1 unittest2 unittest3 unittest4 playdom.exe playdom test.exe test player player.exe testInit testInit.exe *.gcov *.gcda *.gcno *.so
[vagrant@localhost dominion]$ make randomtestadventurer
Makefile:64: warning: overriding recipe for target `test_helpers.o'
Makefile:37: warning: ignoring old recipe for target `test_helpers.o'
gcc -c rngs.c -ggdb  -Wall -fpic -coverage -lm
rngs.c: In function ‘TestRandom’:
rngs.c:161:10: warning: variable ‘u’ set but not used [-Wunused-but-set-variable]
   double u;
          ^
gcc -c test_helpers.c -ggdb  -Wall -fpic -coverage -lm
gcc -fprofile-arcs -ftest-coverage -c dominion.c -ggdb  -Wall -fpic -coverage -lm
gcc -o randomtestadventurer randomtestadventurer.c -ggdb test_helpers.o dominion.o rngs.o -Wall -fpic -coverage -lm
randomtestadventurer.c: In function ‘main’:
randomtestadventurer.c:156:3: warning: unused variable ‘i’ [-Wunused-variable]
   i;
   ^
[vagrant@localhost dominion]$ ./randomtestadventurer 

######################### Testing playAdventurer #########################

playing adventurer
    PASSED TEST 1, Return is 0: returned = 0, expected = 0
    FAILED TEST 2, Pre & post is same: memcmp pre/post = 120, expected = 0
    FAILED TEST 3, discard count matches: pre = 188, post = 191
    FAILED TEST 4, deck count same: pre = 3, post = 0
    PASSED TEST 5, hand count same: pre = 27, post = 27
    PASSED TEST 6, top card in hand same: pre = 4, post = 4
    FAILED TEST 7, top card in deck same: pre = 21, post = -24307644
    PASSED TEST 8, top card in discard same: pre = 10, post = 10

------------ FAILURE - playAdventurer: 4/8 tests passed

[vagrant@localhost dominion]$ gdb randomtestadventurer
GNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-94.el7
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-redhat-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from /OSUCoding/cs362/CS362-004-SP17/projects/jamesc2/dominion/randomtestadventurer...done.
(gdb) break playAdventurer
Breakpoint 1 at 0x4070ab: file dominion.c, line 1248.
(gdb) watch drawntreasure
No symbol "drawntreasure" in current context.
(gdb) run
Starting program: /OSUCoding/cs362/CS362-004-SP17/projects/jamesc2/dominion/randomtestadventurer 

######################### Testing playAdventurer #########################


Breakpoint 1, playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, 
    temphand=0x7fffffffdac0, drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1248
1248	  printf("playing adventurer\n");
Missing separate debuginfos, use: debuginfo-install glibc-2.17-157.el7_3.1.x86_64
(gdb) print state
$1 = (struct gameState *) 0x610010
(gdb) print *state
$2 = {numPlayers = 4, supplyCount = {-1102879357, -812282090, -18840937, 1833760697, -152655898, 
    1273551658, -2092012817, -1951348123, 1855723415, -981542759, -952553198, -1801638379, 
    1768968381, 697564904, 326391218, 158411808, -1399556223, 1674907927, -34264528, -1398809059, 
    1093047965, 1172674508, 409290034, 639672741, 176878102, 2004663436, -1842071551}, 
  embargoTokens = {-1305765347, 738896446, -748371875, 1370603664, 633833684, -369898859, 43174856, 
    1271038503, -2116513895, -70561815, 1916335632, 250236317, -76559044, 1037503901, -1997399411, 
    1423279405, -88780432, -195249100, -1830745080, -820965381, 961477150, -1629722415, -365903365, 
    -729544278, 767485884, 1412206929, 1983931818}, outpostPlayed = 1099640419, 
  outpostTurn = 852597956, whoseTurn = 0, phase = 659410408, numActions = 1095530559, 
  coins = -1303577022, numBuys = 293263593, hand = {{45363482, 1669165118, 1061954052, -1294502237, 
      774714609, 616260853, 2033629132, 9788660, 1051261174, -256071833, -403990421, 1297830941, 
      1931521145, -1637455732, 201702965, 83209568, -263616402, 2123718806, -936661934, -1159142260, 
      634540734, 906771644, -1802553412, -902971350, 1630675565, 1302093808, -770202217, 
      -2031040391, -1570884252, -1114660069, 1717808811, 1124532666, -1537417953, -1604346055, 
      -134769073, 1997184302, 672636504, -580246490, 1958222059, -2094312594, 292364962, -74119225, 
      6092253, 1744003410, 1527395177, -1605976876, 495279064, -635066074, 772680772, 2054464222, 
      -1055101265, 364119872, -1498047641, 1178983166, 305243675, 541008942, -272829920, 494201633, 
      -1114260530, -1338343487, -397100480, -838606099, 1803214299, -974095382, 65419225, 
      -1748507312, 716182939, -62567821, -696521553, 798741662, 944744633, -1279368266, -598012603, 
      -1419269028, 193724933, -261117616, -207729092, -301655096, 648109922, 1689009860, 1652107272, 
      -742852311, 789598678, -677939114, -1440917430, 1681747808, -883047434, -2079002465, 
      825161386, -1973857048, 860743362, -843810157, 1241961058, 591983323, -1001539766, 690632954, 
      -482796449, -345594363, 2085875146, 628527506, -464405164, 165372498, -722976627, 2029765545, 
      1743776857, -1686641433, 1762479116, -1682917876, 1292008161, 1977952711, -572569605, 
      -1163628486, 109237029, -1842465757, 1737828833, 2084453487, -1192451247, 386435088, 
      -1482776293, 664212658, -1991598446, 1852586764, -290370748, -2028691044, 2128524062, 
      -1138234412, -735644038, -1915871517, -408901485, -90651592, 1881374921, 162914512, 
      -1904734598, -1954466856, 850438213, -2064233017, 1636087565, 1238277503, -2087928038, 
      -128281802, -1176176941, -986904768, 2052568662, 1129792266, -262757668, -1537701230, 
      900621272, -376638894, 1183602960, -1493300561, -160059205, -580014434, -976562064, 448532223, 
      -1932695363, 197450002, -922683426, 1352239510, -508862304, -1137772533, 1958150247, 
      1739714563, 1041914047, -1211972846, -133266374, 1024712066, 100778150, -1509821147, 
      1193842295, -573542201, 1169999094, 928583634, 1266726148, 563245874, 1078712660, 681790027, 
      -1161165876, 456548491, -1988913006, 2008656779, -1605805624, 1190971022, -956047600, 
      -202405506, -1644333037, 2057560565, 783748875, -148360253, -837500754, -1061468518, 
      449293574, 310991884, -2136999864, 1015918868, 768502972, 739291829, -562490065, 615328723, 
      -773613382, -1607902864...}, {1312148150, 62439324, -1324240897, 1720447099, -1903296488, 
      -2140174348, 1998348003, -1410230078, -653803915, -1124996205, 1946718579, 636195727, 
      726918006, -1299741458, -222160748, -1619019385, -679849111, -866779020, -532832291, 
      -396301702, 1366575385, 599308093, 1056807470, -215709393, 791920358, 1668262009, -527409199, 
      -696381568, 802861652, -846345842, -220870609, -1802922927, 1580271624, 2106388565, 
      -996213981, 232617792, 138764690, -1745538624, 623257547, -252691888, 191726970, -1354804372, 
      1688687967, -45813443, -1438390562, 1958244668, -492218901, -295287663, -1156220107, 
      1470601082, -756080139, -472913366, -1828305114, -652630232, 197499418, -279204218, 704064583, 
      -862754124, -155895424, -547348277, 2035031007, -1731072815, -1145270178, 1946879025, 
      1451702824, 496580420, 508186940, -1428928784, -1026502596, 411595811, 257284841, -1127973233, 
---Type <return> to continue, or q <return> to quit---q
-Quit
(gdb) print state->deckCount
$3 = {9, -2139486867, -2120208154, 1396043743}
(gdb) print state->deckCount[0]
$4 = 9
(gdb) print state->deck[0]
$5 = {1, 21, 16, 4, 7, 19, 11, 23, 10, 1053986796, -918739237, -1713635100, 2056970397, -2076346338, 
  -31056727, -1984027855, -1547521733, -650763547, 588456963, 2114131937, 2352808, 1717669278, 
  870631733, -905064619, 1378037819, 959675699, 1069426345, 488070190, -1861565508, -654171376, 
  1243029080, 1485546247, 223286675, 222850918, -553612386, -1704026990, 1138028005, -34975722, 
  -1135314788, -914655986, 84637294, 1758055280, -728560428, 1659013288, -679021232, 309216196, 
  -413276509, 114926647, -533503630, 882427472, -1966271838, -629505903, -1375703595, 1942362524, 
  1068321614, -1085591018, -16375496, 305838686, 953707703, 1889157064, 2103898964, 347839624, 
  -498199999, 188743817, 1046958302, 370062248, 1460896418, -1119199321, -256757577, -1350333718, 
  385721335, 1662389591, -710929951, -516512196, -758582837, 585571805, 368875390, -2130798311, 
  -1248526450, 1488335687, -1375402625, 1949279390, -611265613, 1639689240, -1742966043, 
  -2081252620, 1050200102, 348915254, -1951697678, 1962937386, 2003903005, 667090997, -1105358457, 
  1806082930, -899265888, -447837074, 920988880, -724693897, 1324091289, 334898087, 457519443, 
  -1730901920, 1055462473, 854362076, 5198173, 1349711969, -42003993, -1540983529, -551184358, 
  -366794211, 429550196, -1302190839, 373745556, 1533649, 2083953667, 544067208, 375913760, 
  954651105, 1498922470, -1532209291, 1973430887, -621600137, 1028970641, 1842274935, 1488532424, 
  782304279, 10031922, -180570663, -875419415, -59238193, -782748884, 675094864, 924322425, 
  848512102, -1713696932, 808466227, -2024918631, -1595071950, -1518541817, -360297660, 641718701, 
  -973052794, -936488998, -59626604, 1719376799, 696040979, -2005874568, 440440255, -528982070, 
  570697641, -343426430, -1676996209, 10924075, 55648264, -880253541, 81633699, 1055463857, 
  -359558853, 651932417, 1881129538, -1183515494, 782177477, 2108458494, 1897141708, 1452715135, 
  1217971447, -38765593, -1111787579, 96549797, -1322857778, 267145036, 1240422237, 1295821744, 
  -1967838074, 1294456762, 1914219526, 1484535848, -802279854, -1304928910, -1279859186, 
  -2096628782, 2131580614, -1410273895, -1803047325, 1089940911, 560767494, 1967271302, -1034185847, 
  -143482227, 976714540, -686823289, 1383018556, 872818727, 1393952484, 426031655, 1319473860, 
  1236221682, 1753558494, -674301649, 333709014...}
(gdb) list
1243	  discardCard(hp, currentPlayer, state, 0);
1244	  return 0;
1245	}
1246	
1247	int playAdventurer(struct gameState *state, int currentPlayer, int * cardDrawn, int *temphand, int * drawntreasure, int * zr) {
1248	  printf("playing adventurer\n");
1249	  int z = 0;
1250	  while( (*drawntreasure) < 2){
1251	    
1252	    // printf("deckCount=%d\n", state->deckCount[currentPlayer]);
(gdb) watch *cardDrawn
Hardware watchpoint 2: *cardDrawn
(gdb) continue
Continuing.
playing adventurer
Hardware watchpoint 2: *cardDrawn

Old value = 0
New value = 10
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) next
1262	      temphand[z] = (*cardDrawn);
(gdb) 
1263	      state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
(gdb) 
1264	      z++;
(gdb) 
1250	  while( (*drawntreasure) < 2){
(gdb) watch *drawntreasure
Hardware watchpoint 3: *drawntreasure
(gdb) print *drawntreasure
$6 = 0
(gdb) next
1253	    if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
(gdb) watch state->deckCount[currentPlayer]
Hardware watchpoint 4: state->deckCount[currentPlayer]
(gdb) next
Warning:
Could not insert hardware watchpoint 2.
Could not insert hardware watchpoint 3.
Could not insert hardware watchpoint 4.
Could not insert hardware breakpoints:
You may have requested too many hardware breakpoints/watchpoints.

(gdb) 
Warning:
Could not insert hardware watchpoint 2.
Could not insert hardware watchpoint 3.
Could not insert hardware watchpoint 4.
Could not insert hardware breakpoints:
You may have requested too many hardware breakpoints/watchpoints.

(gdb) 
Warning:
Could not insert hardware watchpoint 2.
Could not insert hardware watchpoint 3.
Could not insert hardware watchpoint 4.
Could not insert hardware breakpoints:
You may have requested too many hardware breakpoints/watchpoints.

(gdb) help
List of classes of commands:

aliases -- Aliases of other commands
breakpoints -- Making program stop at certain points
data -- Examining data
files -- Specifying and examining files
internals -- Maintenance commands
obscure -- Obscure features
running -- Running the program
stack -- Examining the stack
status -- Status inquiries
support -- Support facilities
tracepoints -- Tracing of program execution without stopping the program
user-defined -- User-defined commands

Type "help" followed by a class name for a list of commands in that class.
Type "help all" for the list of all commands.
Type "help" followed by command name for full documentation.
Type "apropos word" to search for commands related to "word".
Command name abbreviations are allowed if unambiguous.
(gdb) help breakpoints
Making program stop at certain points.

List of commands:

awatch -- Set a watchpoint for an expression
break -- Set breakpoint at specified line or function
break-range -- Set a breakpoint for an address range
catch -- Set catchpoints to catch events
catch assert -- Catch failed Ada assertions
catch catch -- Catch an exception
catch exception -- Catch Ada exceptions
catch exec -- Catch calls to exec
catch fork -- Catch calls to fork
catch load -- Catch loads of shared libraries
catch signal -- Catch signals by their names and/or numbers
catch syscall -- Catch system calls by their names and/or numbers
catch throw -- Catch an exception
catch unload -- Catch unloads of shared libraries
catch vfork -- Catch calls to vfork
clear -- Clear breakpoint at specified line or function
commands -- Set commands to be executed when a breakpoint is hit
condition -- Specify breakpoint number N to break only if COND is true
delete -- Delete some breakpoints or auto-display expressions
delete bookmark -- Delete a bookmark from the bookmark list
delete breakpoints -- Delete some breakpoints or auto-display expressions
delete checkpoint -- Delete a checkpoint (experimental)
delete display -- Cancel some expressions to be displayed when program stops
delete mem -- Delete memory region
delete tracepoints -- Delete specified tracepoints
delete tvariable -- Delete one or more trace state variables
disable -- Disable some breakpoints
disable breakpoints -- Disable some breakpoints
disable display -- Disable some expressions to be displayed when program stops
disable frame-filter -- GDB command to disable the specified frame-filter
disable mem -- Disable memory region
disable pretty-printer -- GDB command to disable the specified pretty-printer
disable tracepoints -- Disable specified tracepoints
disable type-printer -- GDB command to disable the specified type-printer
dprintf -- Set a dynamic printf at specified line or function
enable -- Enable some breakpoints
enable breakpoints -- Enable some breakpoints
enable breakpoints count -- Enable breakpoints for COUNT hits
enable breakpoints delete -- Enable breakpoints and delete when hit
enable breakpoints once -- Enable breakpoints for one hit
enable count -- Enable breakpoints for COUNT hits
enable delete -- Enable breakpoints and delete when hit
---Type <return> to continue, or q <return> to quit---
enable display -- Enable some expressions to be displayed when program stops
enable frame-filter -- GDB command to disable the specified frame-filter
enable mem -- Enable memory region
enable once -- Enable breakpoints for one hit
enable pretty-printer -- GDB command to enable the specified pretty-printer
enable tracepoints -- Enable specified tracepoints
enable type-printer -- GDB command to enable the specified type printer
ftrace -- Set a fast tracepoint at specified line or function
hbreak -- Set a hardware assisted breakpoint
ignore -- Set ignore-count of breakpoint number N to COUNT
rbreak -- Set a breakpoint for all functions matching REGEXP
rwatch -- Set a read watchpoint for an expression
save -- Save breakpoint definitions as a script
save breakpoints -- Save current breakpoint definitions as a script
save gdb-index -- Save a gdb-index file
save tracepoints -- Save current tracepoint definitions as a script
skip -- Ignore a function while stepping
skip delete -- Delete skip entries
skip disable -- Disable skip entries
skip enable -- Enable skip entries
skip file -- Ignore a file while stepping
skip function -- Ignore a function while stepping
strace -- Set a static tracepoint at specified line
tbreak -- Set a temporary breakpoint
tcatch -- Set temporary catchpoints to catch events
tcatch assert -- Catch failed Ada assertions
tcatch catch -- Catch an exception
tcatch exception -- Catch Ada exceptions
tcatch exec -- Catch calls to exec
tcatch fork -- Catch calls to fork
tcatch load -- Catch loads of shared libraries
tcatch signal -- Catch signals by their names and/or numbers
tcatch syscall -- Catch system calls by their names and/or numbers
tcatch throw -- Catch an exception
tcatch unload -- Catch unloads of shared libraries
tcatch vfork -- Catch calls to vfork
thbreak -- Set a temporary hardware assisted breakpoint
trace -- Set a tracepoint at specified line or function
watch -- Set a watchpoint for an expression

Type "help" followed by command name for full documentation.
Type "apropos word" to search for commands related to "word".
Command name abbreviations are allowed if unambiguous.
(gdb) list
1248	  printf("playing adventurer\n");
1249	  int z = 0;
1250	  while( (*drawntreasure) < 2){
1251	    
1252	    // printf("deckCount=%d\n", state->deckCount[currentPlayer]);
1253	    if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
1254	      shuffle(currentPlayer, state);
1255	    }
1256	    drawCard(currentPlayer, state);
1257	    *cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
(gdb) next
Warning:
Could not insert hardware watchpoint 2.
Could not insert hardware watchpoint 3.
Could not insert hardware watchpoint 4.
Could not insert hardware breakpoints:
You may have requested too many hardware breakpoints/watchpoints.

(gdb) delete 2
(gdb) next
Warning:
Could not insert hardware watchpoint 3.
Could not insert hardware breakpoints:
You may have requested too many hardware breakpoints/watchpoints.

(gdb) delete 3
(gdb) next
1256	    drawCard(currentPlayer, state);
(gdb) next
Hardware watchpoint 4: state->deckCount[currentPlayer]

Old value = 8
New value = 7
drawCard (player=0, state=0x610010) at dominion.c:577
577	    state->handCount[player]++;//Increment hand count
(gdb) list watchpoints
Function "watchpoints" not defined.
(gdb) watch *drawntreasure
No symbol "drawntreasure" in current context.
(gdb) next
580	  return 0;
(gdb) 
581	}
(gdb) 
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1257
1257	    *cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
(gdb) 
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
1262	      temphand[z] = (*cardDrawn);
(gdb) 
1263	      state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
(gdb) 
1264	      z++;
(gdb) 
1250	  while( (*drawntreasure) < 2){
(gdb) print *drawntreasure
$7 = 0
(gdb) watch *drawntreasure
Hardware watchpoint 5: *drawntreasure
(gdb) next
Warning:
Could not insert hardware watchpoint 5.
Could not insert hardware breakpoints:
You may have requested too many hardware breakpoints/watchpoints.

(gdb) delete 4
(gdb) next
1253	    if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
(gdb) step
1256	    drawCard(currentPlayer, state);
(gdb) 
drawCard (player=0, state=0x610010) at dominion.c:528
528	  if (state->deckCount[player] <= 0){//Deck is empty
(gdb) 
568	    int count = state->handCount[player];//Get current hand count for player
(gdb) print state->handCount[player]
$8 = 26
(gdb) 
$9 = 26
(gdb) step
574	    deckCounter = state->deckCount[player];//Create holder for the deck count
(gdb) 
575	    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
(gdb) 
576	    state->deckCount[player]--;
(gdb) 
577	    state->handCount[player]++;//Increment hand count
(gdb) 
580	  return 0;
(gdb) 
581	}
(gdb) 
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1257
1257	    *cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
(gdb) print *cardDrawn
$10 = 23
(gdb) print state->deck[currentPlayer]
$11 = {1, 21, 16, 4, 7, 19, 11, 23, 10, 1053986796, -918739237, -1713635100, 2056970397, 
  -2076346338, -31056727, -1984027855, -1547521733, -650763547, 588456963, 2114131937, 2352808, 
  1717669278, 870631733, -905064619, 1378037819, 959675699, 1069426345, 488070190, -1861565508, 
  -654171376, 1243029080, 1485546247, 223286675, 222850918, -553612386, -1704026990, 1138028005, 
  -34975722, -1135314788, -914655986, 84637294, 1758055280, -728560428, 1659013288, -679021232, 
  309216196, -413276509, 114926647, -533503630, 882427472, -1966271838, -629505903, -1375703595, 
  1942362524, 1068321614, -1085591018, -16375496, 305838686, 953707703, 1889157064, 2103898964, 
  347839624, -498199999, 188743817, 1046958302, 370062248, 1460896418, -1119199321, -256757577, 
  -1350333718, 385721335, 1662389591, -710929951, -516512196, -758582837, 585571805, 368875390, 
  -2130798311, -1248526450, 1488335687, -1375402625, 1949279390, -611265613, 1639689240, 
  -1742966043, -2081252620, 1050200102, 348915254, -1951697678, 1962937386, 2003903005, 667090997, 
  -1105358457, 1806082930, -899265888, -447837074, 920988880, -724693897, 1324091289, 334898087, 
  457519443, -1730901920, 1055462473, 854362076, 5198173, 1349711969, -42003993, -1540983529, 
  -551184358, -366794211, 429550196, -1302190839, 373745556, 1533649, 2083953667, 544067208, 
  375913760, 954651105, 1498922470, -1532209291, 1973430887, -621600137, 1028970641, 1842274935, 
  1488532424, 782304279, 10031922, -180570663, -875419415, -59238193, -782748884, 675094864, 
  924322425, 848512102, -1713696932, 808466227, -2024918631, -1595071950, -1518541817, -360297660, 
  641718701, -973052794, -936488998, -59626604, 1719376799, 696040979, -2005874568, 440440255, 
  -528982070, 570697641, -343426430, -1676996209, 10924075, 55648264, -880253541, 81633699, 
  1055463857, -359558853, 651932417, 1881129538, -1183515494, 782177477, 2108458494, 1897141708, 
  1452715135, 1217971447, -38765593, -1111787579, 96549797, -1322857778, 267145036, 1240422237, 
  1295821744, -1967838074, 1294456762, 1914219526, 1484535848, -802279854, -1304928910, -1279859186, 
  -2096628782, 2131580614, -1410273895, -1803047325, 1089940911, 560767494, 1967271302, -1034185847, 
  -143482227, 976714540, -686823289, 1383018556, 872818727, 1393952484, 426031655, 1319473860, 
  1236221682, 1753558494, -674301649, 333709014...}
(gdb) print state->hand[currentPlayer][state->handCount[currentPlayer]-1]
$12 = 11
(gdb) print *cardDrawn
$13 = 23
(gdb) list
1252	    // printf("deckCount=%d\n", state->deckCount[currentPlayer]);
1253	    if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
1254	      shuffle(currentPlayer, state);
1255	    }
1256	    drawCard(currentPlayer, state);
1257	    *cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
1258	    // printf("cardDrawn=%d\n", *cardDrawn);
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
1260	      (*drawntreasure)++;
1261	    else{
(gdb) step
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
1262	      temphand[z] = (*cardDrawn);
(gdb) print temphand[z
A syntax error in expression, near `'.
(gdb) print temphand[z]
$14 = 34816
(gdb) print temphand
$15 = (int *) 0x7fffffffdac0
(gdb) print temphand[0]
$16 = 10
(gdb) print temphand[1]
$17 = 23
(gdb) print temphand[2]
$18 = 34816
(gdb) step
1263	      state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
(gdb) print temphand[2]
$19 = 11
(gdb) print *cardDrawn
$20 = 11
(gdb) step
1264	      z++;
(gdb) 
1250	  while( (*drawntreasure) < 2){
(gdb) 
1253	    if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
(gdb) 
1256	    drawCard(currentPlayer, state);
(gdb) next
1257	    *cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
(gdb) 
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
1262	      temphand[z] = (*cardDrawn);
(gdb) 
1263	      state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
(gdb) 
1264	      z++;
(gdb) 
1250	  while( (*drawntreasure) < 2){
(gdb) 
1253	    if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
(gdb) print state->deckCount[currentPlayer]
$21 = 5
(gdb) next
1256	    drawCard(currentPlayer, state);
(gdb) 
1257	    *cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
(gdb) 
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
1262	      temphand[z] = (*cardDrawn);
(gdb) 
1263	      state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
(gdb) 
1264	      z++;
(gdb) 
1250	  while( (*drawntreasure) < 2){
(gdb) 
1253	    if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
(gdb) 
1256	    drawCard(currentPlayer, state);
(gdb) 
1257	    *cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
(gdb) 
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
1260	      (*drawntreasure)++;
(gdb) 
Hardware watchpoint 5: *drawntreasure

Old value = 0
New value = 1
0x00000000004071c5 in playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, 
    temphand=0x7fffffffdac0, drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1260
1260	      (*drawntreasure)++;
(gdb) print *cardDrawn
$22 = 4
(gdb) next
1250	  while( (*drawntreasure) < 2){
(gdb) print *drawntreasure
$23 = 1
(gdb) next
1253	    if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
(gdb) print state->deckCount[currentPlayer]
$24 = 3
(gdb) next
1256	    drawCard(currentPlayer, state);
(gdb) 
1257	    *cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
(gdb) 
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
1262	      temphand[z] = (*cardDrawn);
(gdb) 
1263	      state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
(gdb) 
1264	      z++;
(gdb) 
1250	  while( (*drawntreasure) < 2){
(gdb) 
1253	    if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
(gdb) 
1256	    drawCard(currentPlayer, state);
(gdb) 
1257	    *cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
(gdb) 
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
1262	      temphand[z] = (*cardDrawn);
(gdb) 
1263	      state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
(gdb) 
1264	      z++;
(gdb) 
1250	  while( (*drawntreasure) < 2){
(gdb) 
1253	    if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
(gdb) print state->deckCount[currentPlayer]
$25 = 1
(gdb) 
$26 = 1
(gdb) next
1256	    drawCard(currentPlayer, state);
(gdb) 
1257	    *cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
(gdb) 
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
1262	      temphand[z] = (*cardDrawn);
(gdb) print state->deckCount[currentPlayer]
$27 = 0
(gdb) next
1263	      state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
(gdb) 
1264	      z++;
(gdb) 
1250	  while( (*drawntreasure) < 2){
(gdb) 
1253	    if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
(gdb) step
1254	      shuffle(currentPlayer, state);
(gdb) 
shuffle (player=0, state=0x610010) at dominion.c:205
205	  int newDeckPos = 0;
(gdb) 
209	  if (state->deckCount[player] < 1)
(gdb) 
210	    return -1;
(gdb) 
229	}
(gdb) 
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1256
1256	    drawCard(currentPlayer, state);
(gdb) print state->deckCount
$28 = {0, -2139486867, -2120208154, 1396043743}
(gdb) next
1257	    *cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
(gdb) print *cardDrawn
$29 = 1
(gdb) next
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
1262	      temphand[z] = (*cardDrawn);
(gdb) 
1263	      state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
(gdb) 
1264	      z++;
(gdb) 
1250	  while( (*drawntreasure) < 2){
(gdb) step
1253	    if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
(gdb) 
1256	    drawCard(currentPlayer, state);
(gdb) print state->deckCount[currentPlayer]
$30 = 182
(gdb) state->discardCount[currentPlayer]
Undefined command: "state->discardCount".  Try "help".
(gdb) print state->discardCount[currentPlayer]
$31 = 0
(gdb) step
drawCard (player=0, state=0x610010) at dominion.c:528
528	  if (state->deckCount[player] <= 0){//Deck is empty
(gdb) list
523	}
524	
525	int drawCard(int player, struct gameState *state)
526	{	int count;
527	  int deckCounter;
528	  if (state->deckCount[player] <= 0){//Deck is empty
529	    
530	    //Step 1 Shuffle the discard pile back into a deck
531	    int i;
532	    //Move discard to deck
(gdb) 
533	    for (i = 0; i < state->discardCount[player];i++){
534	      state->deck[player][i] = state->discard[player][i];
535	      state->discard[player][i] = -1;
536	    }
537	
538	    state->deckCount[player] = state->discardCount[player];
539	    state->discardCount[player] = 0;//Reset discard
540	
541	    //Shufffle the deck
542	    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
(gdb) step
568	    int count = state->handCount[player];//Get current hand count for player
(gdb) 
574	    deckCounter = state->deckCount[player];//Create holder for the deck count
(gdb) 
575	    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
(gdb) 
576	    state->deckCount[player]--;
(gdb) 
577	    state->handCount[player]++;//Increment hand count
(gdb) 
580	  return 0;
(gdb) 
581	}
(gdb) 
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1257
1257	    *cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
(gdb) 
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
1262	      temphand[z] = (*cardDrawn);
(gdb) 
1263	      state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
(gdb) 
1264	      z++;
(gdb) 
1250	  while( (*drawntreasure) < 2){
(gdb) 
1253	    if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
(gdb) continue
Continuing.
Hardware watchpoint 5: *drawntreasure

Old value = 1
New value = 2
0x00000000004071c5 in playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, 
    temphand=0x7fffffffdac0, drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1260
1260	      (*drawntreasure)++;
(gdb) print *cardDrawn
$32 = 4
(gdb) print state->deckCount[currentPlayer]
$33 = 0
(gdb) bt
#0  0x00000000004071c5 in playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, 
    temphand=0x7fffffffdac0, drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1260
#1  0x0000000000401ac1 in runTest (num=1, failure=0x7fffffffe2c4, special=1)
    at randomtestadventurer.c:137
#2  0x0000000000401bf9 in main () at randomtestadventurer.c:176
(gdb) print *state
$34 = {numPlayers = 4, supplyCount = {-1102879357, -812282090, -18840937, 1833760697, -152655898, 
    1273551658, -2092012817, -1951348123, 1855723415, -981542759, -952553198, -1801638379, 
    1768968381, 697564904, 326391218, 158411808, -1399556223, 1674907927, -34264528, -1398809059, 
    1093047965, 1172674508, 409290034, 639672741, 176878102, 2004663436, -1842071551}, 
  embargoTokens = {-1305765347, 738896446, -748371875, 1370603664, 633833684, -369898859, 43174856, 
    1271038503, -2116513895, -70561815, 1916335632, 250236317, -76559044, 1037503901, -1997399411, 
    1423279405, -88780432, -195249100, -1830745080, -820965381, 961477150, -1629722415, -365903365, 
    -729544278, 767485884, 1412206929, 1983931818}, outpostPlayed = 1099640419, 
  outpostTurn = 852597956, whoseTurn = 0, phase = 659410408, numActions = 1095530559, 
  coins = -1303577022, numBuys = 293263593, hand = {{45363482, 1669165118, 1061954052, -1294502237, 
      774714609, 616260853, 2033629132, 9788660, 1051261174, -256071833, -403990421, 1297830941, 
      1931521145, -1637455732, 201702965, 83209568, -263616402, 2123718806, -936661934, -1159142260, 
      634540734, 906771644, -1802553412, -902971350, 1630675565, 1302093808, 4, 1, -1570884252, 
      -1114660069, 1717808811, 1124532666, -1537417953, -1604346055, -134769073, 1997184302, 
      672636504, -580246490, 1958222059, -2094312594, 292364962, -74119225, 6092253, 1744003410, 
      1527395177, -1605976876, 495279064, -635066074, 772680772, 2054464222, -1055101265, 364119872, 
      -1498047641, 1178983166, 305243675, 541008942, -272829920, 494201633, -1114260530, 
      -1338343487, -397100480, -838606099, 1803214299, -974095382, 65419225, -1748507312, 716182939, 
      -62567821, -696521553, 798741662, 944744633, -1279368266, -598012603, -1419269028, 193724933, 
      -261117616, -207729092, -301655096, 648109922, 1689009860, 1652107272, -742852311, 789598678, 
      -677939114, -1440917430, 1681747808, -883047434, -2079002465, 825161386, -1973857048, 
      860743362, -843810157, 1241961058, 591983323, -1001539766, 690632954, -482796449, -345594363, 
      2085875146, 628527506, -464405164, 165372498, -722976627, 2029765545, 1743776857, -1686641433, 
      1762479116, -1682917876, 1292008161, 1977952711, -572569605, -1163628486, 109237029, 
      -1842465757, 1737828833, 2084453487, -1192451247, 386435088, -1482776293, 664212658, 
      -1991598446, 1852586764, -290370748, -2028691044, 2128524062, -1138234412, -735644038, 
      -1915871517, -408901485, -90651592, 1881374921, 162914512, -1904734598, -1954466856, 
      850438213, -2064233017, 1636087565, 1238277503, -2087928038, -128281802, -1176176941, 
      -986904768, 2052568662, 1129792266, -262757668, -1537701230, 900621272, -376638894, 
      1183602960, -1493300561, -160059205, -580014434, -976562064, 448532223, -1932695363, 
      197450002, -922683426, 1352239510, -508862304, -1137772533, 1958150247, 1739714563, 
      1041914047, -1211972846, -133266374, 1024712066, 100778150, -1509821147, 1193842295, 
      -573542201, 1169999094, 928583634, 1266726148, 563245874, 1078712660, 681790027, -1161165876, 
      456548491, -1988913006, 2008656779, -1605805624, 1190971022, -956047600, -202405506, 
      -1644333037, 2057560565, 783748875, -148360253, -837500754, -1061468518, 449293574, 310991884, 
      -2136999864, 1015918868, 768502972, 739291829, -562490065, 615328723, -773613382, 
      -1607902864...}, {1312148150, 62439324, -1324240897, 1720447099, -1903296488, -2140174348, 
      1998348003, -1410230078, -653803915, -1124996205, 1946718579, 636195727, 726918006, 
      -1299741458, -222160748, -1619019385, -679849111, -866779020, -532832291, -396301702, 
      1366575385, 599308093, 1056807470, -215709393, 791920358, 1668262009, -527409199, -696381568, 
      802861652, -846345842, -220870609, -1802922927, 1580271624, 2106388565, -996213981, 232617792, 
      138764690, -1745538624, 623257547, -252691888, 191726970, -1354804372, 1688687967, -45813443, 
      -1438390562, 1958244668, -492218901, -295287663, -1156220107, 1470601082, -756080139, 
      -472913366, -1828305114, -652630232, 197499418, -279204218, 704064583, -862754124, -155895424, 
      -547348277, 2035031007, -1731072815, -1145270178, 1946879025, 1451702824, 496580420, 
      508186940, -1428928784, -1026502596, 411595811, 257284841, -1127973233, -1238418523, 
---Type <return> to continue, or q <return> to quit---
      -898706922, 1805009475, -1492838191, -1971850359, -1870406304, -1543203329, -998160910, 
      -1985114984, 1051222351, -1818718588, 1807420273, 1415778971, -1047909679, 2108623325, 
      -1393483596, -989310452, 982964951, -1403925752, -414174457, -1624203317, 294108579, 
      1565114928, -997142982, 97249850, 1524651634, 1118259204, -1009741915, -399528620, -690831347, 
      -882011297, 1605535095, -451657483, 385080811, -1161752683, -332901396, 1946326136, 
      -821576257, 223689178, -1279095167, 2008961899, 283631363, 97694278, 603087041, 832831, 
      264288751, -1553711008, 1676344877, 1090992174, -1111193058, 158620553, -1176449665, 
      1040807259, -398975399, 696454051, -988517924, 454604642, 1654774138, -522396861, 1514150897, 
      694994235, -1083260807, 1709715152, 1645056638, -90610774, -1723050166, -1659104476, 
      -820977093, -1613757025, -1751363176, 1209248775, 75231499, 1100304481, 2086165948, 
      1063642884, 726728535, -1938632864, -1694683531, -550583823, -883031030, 1200799587, 
      434496269, -214489048, -2049359623, 893633280, 684789111, 1102827549, 1774091432, -71601486, 
      -294963139, 532719028, 1460393644, 860580325, -2087047566, -1598268508, 692959297, 103587897, 
      -239676328, 2073241951, 1732347992, 384346105, -1241031532, 210699575, -348850577, 1341056363, 
      -1017516731, 1841240234, 1642063397, -927579155, 1446812170, -374534649, 1017621145, 
      435598166, 1512573165, -1845065150, -1531415752, 1307628341, -1387065036, 777441541, 
      1306272680, -924002847, -1769468609, -811884396, 1553006401, 586581319, -259578473, 146607280, 
      -2096301713...}, {-906738846, 558256148, -116681987, -1970020120, -2039944278, 1142753239, 
      253516924, -1026115928, 1537995736, -1454736587, -1137697628, -2097764800, 1714229639, 
      -1350970434, 948450648, 1599164926, 2033917733, 824210770, -1232241908, 238063061, -970063197, 
      -871202757, 115977288, 2131392445, 1158514794, 91995682, -1946116228, -2103204460, 
      -1672592836, -1388437171, -2100301670, 1235976534, -517986233, 691225340, -184009606, 
      -1843658490, -399077541, 1530540158, -433532052, 346806139, -2109876836, -398089093, 
      2095822121, -2128063784, 585143726, -724177898, 674618443, 1825494478, 96729771, -1950980025, 
      -823085906, 406906856, -788312766, -56199768, -1207722881, -632169240, 796322982, 278380218, 
      45779480, -795173753, -52068616, 833373784, -196340191, -1219365199, 1622470482, 1155730643, 
      -438637987, 1424464391, 823099520, -1217935927, -57079538, -696742800, -1301766958, 501110745, 
      -1854334237, 2085768739, 1613367648, 1520136144, 1554296756, 70687067, -45187801, 2129156077, 
      1239686932, 1822036056, -1060627886, -2003063085, -1045657877, 1030358507, 1671479251, 
      1702489196, 923661302, -1295566247, 1881481345, -1469108440, 391904484, -551360948, 441259872, 
      1768404464, 794403452, 201296039, 85344255, -1665881167, -964147015, -584383623, -512110740, 
      -476050843, 1000594376, 371433418, 1643910887, -1543586255, -832640792, -456939935, 
      -170655572, 1445838704, 562318638, 1259224194, 1743238950, -454828839, 1284436404, 1216891434, 
      635067707, 608723970, -1241251462, 1630518338, -2006609339, 1811509702, 1218971319, 
      2134691395, 1004878080, -740629855, -1960643527, 927653100, 1532424764, -301118624, 
      -1444979445, -30159281, -913521019, -934682450, 140025725, -1120560547, 1164350491, 
      -1661453932, 506322415, 1810210382, -1679191857, 1373234775, -1220427100, -1425895927, 
      -1990815983, -656978333, -865570337, 769283359, 1731918045, -1387038737, 1374281835, 
      -1713979134, 1559199285, 1687593220, -1481234478, 1286091181, 824641519, 635459188, 
      -424573258, -853916359, -1231678614, -42670737, -281391539, -1334816212, 1465866429, 
      1224927364, -714236120, -159752767, 738589395, 1558628121, 463254891, 921044102, -2103914930, 
      1376498588, 458973151, 1734159724, -1456350440, 1135459461, -14502134, 2133233599, -853060324, 
      1390150935, -2068049075, -1190935909, -1453638256, 673963787, 479530687, -372613333, 
      1000680720, 453439804, 312611205, -1575096442, 423108793, -1781801858, 2014351745, 
      -1445243058...}, {-934592949, 1670996534, -436014559, 1995719840, 1256141029, 834706655, 
      -1252710695, -1847594522, -112965485, -1400819978, -1407753647, 1221854815, -212396785, 
---Type <return> to continue, or q <return> to quit---
      2026606984, 1745621881, 2085711090, -821185278, 39940993, 1061713617, 150578796, 1070638889, 
      180346506, 1821055875, -314835607, -1559724422, 1889217030, -1717801703, -374267307, 
      676572481, -1321342250, 1061604563, 10339732, -1086401636, 1837970161, 1282080769, 1216669548, 
      142867066, -712837134, 552684614, -478489550, -1447187482, 644363796, -1941687831, 331402849, 
      368072433, 186701032, -940199223, -1410009108, 1312483431, 700190363, -269964299, -148258049, 
      -209545819, -1896297194, -2098050792, -1305824690, -1520008765, -1803933387, 1903078634, 
      295162728, 1402279942, 1346650640, -2041245978, 826772262, -778021679, 1449853042, 1910636428, 
      -702373370, -1357231627, -1084331546, 844932304, -498430550, -473474594, -313020878, 73908726, 
      -185856664, -625035613, 1518585713, -903902408, 938859511, -1733378711, -714379409, 77893328, 
      658050065, -1437266793, -2111159510, -1308215138, -2120522845, -1256301638, -1046181484, 
      -755395821, 683416564, -461722991, 1368488133, -71069809, 454066753, 758791120, -721075491, 
      1459271736, -1096992259, 1208467591, -1078322711, -608522681, 496677450, 887931921, 600578213, 
      -1556283692, 982188416, -1836437987, 1087745012, -1216569184, -2040276121, -16809844, 
      1426544683, 604667039, 1162532290, -678278837, 297004653, 2007389891, 1289135278, -949325635, 
      105943632, 654355205, -133804884, 655401867, -1623707097, -48359829, -1880031035, 1676094655, 
      850332052, 1392451420, -524576928, 618152294, -565164667, 1306502975, 1090076604, 513208726, 
      -367373872, 2020223643, -309442208, 2138789561, 2008998884, -173650279, -501160693, 
      -1888859953, -326047376, -755088851, -1685174659, -1776453777, 359831950, 1955041828, 
      -211783580, 1087484838, 82027179, -1899830780, -1348040615, 640431229, -1230701711, 
      -488729538, 743446831, -727527922, 807635546, -2046898492, 957044636, 300522748, -1236644938, 
      -1664947715, 1697699979, 1410514008, -1151503861, 757962085, -395319408, 512981940, 
      -1177221955, 1802459569, 425591265, -506267735, -2010206302, 1144789700, -882484292, 
      2092419564, 1363718453, 43481984, -1905178472, -1588497712, 998851174, 621517143, -697142552, 
      -1197524221, -1472960783, 1765929230, 1943318547, 908832497, -1328444478, -1105008443, 
      -961876441, 1284905757, 1883755268, 1179192160, -703153536...}}, handCount = {27, -701803027, 
    -24307644, 2120858920}, deck = {{1, 0, 15, 14, 23, 11, 12, 13, 2, 7, 18, 16, 7, 21, 12, 12, 9, 
      11, 15, 20, 12, 19, 2, 19, 1, 2, 15, 25, 21, 19, 23, 20, 21, 9, 15, 19, 14, 2, 15, 8, 1, 10, 
      0, 25, 1, 9, 13, 16, 12, 14, 23, 17, 11, 1, 20, 10, 9, 9, 9, 19, 18, 20, 12, 0, 0, 0, 18, 20, 
      25, 19, 10, 11, 8, 22, 9, 11, 25, 25, 2, 11, 17, 12, 14, 15, 9, 18, 9, 7, 10, 13, 22, 21, 16, 
      22, 8, 0, 24, 20, 9, 15, 12, 19, 14, 9, 9, 17, 9, 25, 12, 21, 8, 16, 25, 12, 19, 17, 17, 14, 
      25, 12, 3, 17, 16, 12, 12, 16, 2, 13, 9, 0, 3, 8, 0, 8, 17, 20, 15, 11, 18, 15, 19, 8, 21, 1, 
      8, 19, 19, 1, 21, 3, 13, 14, 0, 21, 23, 14, 21, 8, 23, 13, 12, 20, 1, 15, 0, 13, 25, 15, 24, 
      16, 13, 9, 19, 2, 9, 19, 22, 3, 7, 15, 23, 12, 18, -1803047325, 1089940911, 560767494, 
      1967271302, -1034185847, -143482227, 976714540, -686823289, 1383018556, 872818727, 1393952484, 
      426031655, 1319473860, 1236221682, 1753558494, -674301649, 333709014...}, {1079373451, 
      -1267820333, -390215293, -1581964518, 956691183, -1598396362, 1095376137, -915495195, 
      1710743474, -1657169455, -1209817781, 243648998, 643178109, -1677917612, -221701196, 
      1459231126, 1018784050, 1156887673, -959504522, -596973645, 185718390, 2101738110, 1907671933, 
      1733958114, -1603639068, 1035452816, -214767976, 1795383407, 882046909, 1740392544, 
      -2008945446, 1702676505, 789509430, -1663245574, 691777059, -1932507371, -804554557, 
      -1584345815, 788037220, -782731816, -458568891, 1724613947, 1142292782, 1399818549, 
      -541422199, -1792888412, -1945192398, 1530654967, -1291838103, -1219541223, 518782768, 
      -391418147, 835579183, -1937285596, -720364495, -109895858, 767699944, 762042814, -1961282867, 
      -631687052, -134106047, -1495719427, 940911319, -95962730, -1251720354, -1601037312, 
      954567362, -388577039, -927258512, -1826220835, 178914988, -875858695, -745451852, 
      -2140645625, 2045009321, 1436758473, 1151587968, 436421123, 1675518796, -1906617601, 
---Type <return> to continue, or q <return> to quit---
      899323287, 1638793528, 1281740150, 1338477026, -2065763422, 173826027, 1631525146, 
      -1012611070, -1243779412, -1700804541, -558000889, -72470053, 34830567, 1286379630, 
      1345087873, 1829359770, -1043615915, 1851964004, 1729601958, 894626179, 982847481, -959441355, 
      -527796449, 478002448, 1667193266, 2090012058, -552932802, 681902764, -2140582109, -295804918, 
      -493671981, -847429198, -385590985, -460127705, -1001735710, -1209174690, 175501185, 
      -243400772, 1454801634, -64294293, -306805338, -2075022138, 1061895513, 289609478, 540516691, 
      321910841, 1990941866, -1371851272, -808072301, 913263929, -1137871219, 1865868834, 
      1768097176, 1947246562, 1765174284, -1610452614, 191143736, -1621734632, -595213271, 
      -652619227, 1086536160, -213049354, 519944171, 1955998186, 9133441, -116644747, -219278141, 
      -759986261, -2088925248, -936190956, -445272261, -612333348, -166088483, -1504775085, 
      -687999536, -1929175431, 1468887647, -24942147, -1238106994, 1887328153, -730485984, 
      -2147091449, -236451814, -1202459159, -1478251383, -2135563217, -811374074, -507354866, 
      -461219516, 199303061, 237358248, 978355634, 293929024, -1532257590, -130981131, 657454077, 
      -2009432912, 123856109, -1082796407, 533338104, 1188323125, -2005125561, -1244361217, 
      611988191, 2020912328, 1873730866, 252644876, 1376636032, -96268184, 990112388, 60617318, 
      -2043731106, 2037954620, 1070458199, 1768033790, 1967776320, 2098924117, 1487676566, 
      2050586859, -619707294...}, {-392553297, 1367505091, 775225620, 664768118, 2093084059, 
      -1617752276, 506451187, -1864313464, -1679681041, 1396565726, -1284604089, 26409270, 
      -717954293, 1099219835, -270520296, 531538048, -1842541545, -1172920133, -1515382230, 
      736581694, -619606611, -852073828, -1598647003, 2071556364, -909182079, 748376633, 1466606710, 
      -546843945, -1015258880, -811407116, -690149369, -837926187, 1581317645, -1262568095, 
      57859960, -244662866, -984253924, 1701728132, -147965135, -1969175282, -142699396, 
      -1277906786, -952185476, -1532327259, 1747884234, 385938846, 1519042414, 632589912, 
      1603177818, -842380554, -477354060, 2053559661, -1981809841, 591502578, 1785376408, 
      1154933087, 594968321, 1376302708, 1666789629, 1157409852, -1999700837, -162905269, 861486706, 
      1167452171, -1046501959, -1037883556, 301594712, -1529950813, 2050483204, -57462808, 
      137474807, 952154154, 2125444848, -1674856034, -1721262422, 461052567, -2026716861, 919538033, 
      472780412, 424508171, 970584516, -172092940, 14114338, 484919903, 1385753783, -377814494, 
      1726155482, -1350716362, 1318504556, 1831447412, 749209594, 950565393, -2109816650, 
      -2005975285, -1490475241, 816384387, -1344758865, 1792392403, 722758147, 484061525, 
      -1802722029, -1204185076, 1299106966, 1739227911, -1194542858, -1229280219, 1027255521, 
      355004730, -1096764856, 1121605893, 612051648, 463231180, -1437904873, -1901206212, 859869081, 
      -173962360, 1278040706, 453770937, 580666969, -1702991479, -1879755432, 1936894551, 250871156, 
      852186176, -84844907, 1052049748, 1378168553, 876172437, 2101602852, -1265452420, 817755142, 
      -1322621528, -1675962964, -1887706866, 1880105909, 598411591, -472826351, -62113070, 
      -1664417628, -1498428125, 1944659580, 156260383, 1100404636, 1412931072, -371447673, 
      2029256339, -487860606, -318087145, -636880404, -973967232, -122548076, 114243755, 2124340118, 
      -229226622, 1115551409, 349748031, -1168688880, -1226954110, 1487392758, 1702262951, 
      252959738, 12888970, -1846374225, -610797888, 602469681, -1588521217, -232915772, -110945047, 
      -2054284910, -1930899051, -1340830294, -1507971910, 1727849822, -780009775, 257844177, 
      350367550, 1947041755, -1405257257, -468797730, 1394521165, 1342329366, 1425291739, 
      -165540466, 1180899117, 931891167, 1038296815, -2127317819, -1277606859, -1495037905, 
      -40632924, -277110055, -383400173, 1350960944, -68325268, 2135741065, 1324918910, 766836083, 
      -1611732016, 1022272493, 1537742523...}, {1936473229, -620890834, 196614708, -1910051952, 
      476924820, 667870330, 1346275211, 380806418, -888532092, 1003785902, -1092058543, -856454794, 
      1028692323, 71507524, -2120093542, 481884349, -722930670, 2070076004, -2093809242, 
---Type <return> to continue, or q <return> to quit---
      -1436713689, 620809802, -546886576, 316435075, -1239618789, -2024711596, -160913276, 
      -1392066739, 1548626609, 1098737831, -1446745996, 1279950112, -655509671, -1219942856, 
      903779446, -1843590639, -918308704, -2022597966, 701886215, -1488507049, 93144072, 866108723, 
      -943220595, 362159628, -1151558708, 770504969, 1820320970, -68144656, -283778531, 1455182031, 
      -1767230329, 337652327, -1705188945, -1160898538, -66246644, 1194193253, 999839867, 
      1333078609, -1044467224, 189785490, 1406965376, -533196134, 737883091, -1674864314, 
      -475228525, -978650634, 2115254188, 640000934, 1699981289, -1176603160, 1536898087, 
      1436589635, -722278333, 1686091119, -1561753326, -725095964, -377802995, -1183622584, 
      1822196152, 727088877, -126953054, -1796208676, 1297759332, -599268860, -1312985331, 
      1093578641, 2117934585, -517926673, 2144719943, 1310770487, 464987901, -1627572468, 498840454, 
      -446368714, -633043507, -580235878, 1225181806, -391276646, -729244491, -2030550649, 
      206471569, -768985412, -251697110, -1286950696, 951855625, 2099647686, 786582942, 403526646, 
      -674114992, 494188165, 411731594, -1370945065, -2008727508, -1272578284, 1767196199, 
      -911878650, -64665910, 1593900248, 116649197, -214323143, 751658686, 200339884, -675820315, 
      -1482560346, -266906243, 126571629, -1329634707, 972971261, 1693767548, -601722078, 703227692, 
      1970825525, -829397716, -2052723823, 1096026580, 1005489161, 678049560, 1421786779, 
      -538098974, 1157869922, -1311839873, 2000416480, -1073310871, -386393154, 620827797, 
      -1126381815, 1144772855, 1900015635, 1625210911, -456803680, -446538322, -1395008290, 
      -1682261303, 1478422080, 1383763126, 245248459, 1021112442, -515488624, 1240066778, 410151352, 
      281025235, 959033233, -125655008, 1154818140, -1614518605, 863516211, -165565682, 976963845, 
      1319347761, -1688407034, -980082463, 1923305178, -229546587, 2067514617, -345058231, 
      312952414, -1838906431, 179866348, 724534246, -197492589, -1316781280, 1342605834, 
      -2142974599, 1506362111, -1234250289, -572231228, -1592721563, 820513856, -867116790, 
      1437906660, 548282146, 205807294, 1310103443, -739180816, 1844571960, -556900365, -1589379855, 
      -1721130760, 1459196777, 1615145591, 404916807...}}, deckCount = {0, -2139486867, -2120208154, 
    1396043743}, discard = {{-1 <repeats 183 times>, 941865950, -2082458717, -1695339624, 809732088, 
      -1443622027, -1878189929, -1050356588, -1502426844, -232041148, 394957079, -1921314258, 
      1936777573, 297785580, 1982238434, 158352048, -745706614, 1461843694, -2032772387, 10772665, 
      1666651211, 626629866, -1015832657, 1977117883, -24160958, -1896919224, -1829078059, 
      -229192632, 361936313, 1234924944, -894611668, 812457900, 545086191, 2032185688, 1806143218, 
      971495836, -2064170844, 1029278337, 1371695218, 1030817812, -924494521, -1692663407, 
      -1960869821, -96545027, -2079199204, -2043179122, 2071418891, -1639881619, -258086693, 
      366418679, -1302859740, 1586166093, -735940583, -1515499011, 742590955, 889843411, 1924516332, 
      1532090307, -202765469, -404111252, 215926440, 531402903, 524792185, 412512208, -1647350925, 
      -288950618, -96910982, 1186657429, -1697606839, -1480723633, 1535170905, -1424255412, 
      -1319974694, -39274116, -162473315, 1168262190, -2015375509, -1647723126, -2061762506, 
      -2109534805, 827603956, 1415237729, -1811997800, 1135543801, 46168614, 689063156, -808944389, 
      -1648766778, -811432372, -720442896, -972113695, -446708564, -1381914155, -1508708081, 
      836371869, 999783092, -1121172548, 811031311, -1356041539, -437746657, 95128012, -641805834, 
      2069652322, -932343860, 562100408, 2136613970, -2081992107, 546767992, 1604285888, 192669744, 
      138634716, 411078014, -1749684163, -127819287, 2077576203, -2029563914, 285488000, 971243298, 
      -321632890, -1813933441, 1038516569, 1885297568, 1969951960, 462130983, -197842803, 
      -1521793739, -1070215158, -460770836, -663253694, -498748442, 1590079507, 369976563, 
      -617475018, -1798833847, -1475018776, 1024939456, -1540853336, 1475546799, 372891529, 
      920695643, 1435592356, 980667653, -1036875199, -1109381629, 456238599, -981859676, -941216977, 
      457214851, 2069288630, 44586866, 1965611268, -1418809855, 15203516, -1579013250, -194182596, 
---Type <return> to continue, or q <return> to quit---
      -73736509, 1852906668, -395652703, 2026833354, 177428431, -188263242, -1928176995, -178946938, 
      783590102, -1575906128, -812253181, 1837817528, 1274165578, 1579812901, 615265260, 1656219096, 
      675756243, 125294519, -1840810772, 729011697, 1507140105, 807700886, 635418296, -1338420771, 
      1962872480, -1100046423, 290661121, -2093389329, -867764722, -1359257976, -874076687, 
      2031767062, -2065165205, 1113439656, -1197330493, -1630632003...}, {-969050014, 1128079006, 
      -1374584804, -762601101, 1150844663, 1772843276, 1951327717, 1695890477, 1207763892, 
      -117417048, -1297591584, 214341642, -1022572211, -1228845450, -557093848, -1268652172, 
      1039158704, 177037764, -1088213407, 547690794, 575743074, -1165632576, 1153646570, -348068117, 
      897930060, 68266233, -1140612091, 2060135833, 269066768, 2100062855, -1036207921, 1968723105, 
      587157758, 1472461034, 479089726, -1836932579, 362571993, -55868605, 1261777439, -450861574, 
      526915243, -339575487, 1285050674, -378393506, 1061810114, -1310491488, -1041213032, 
      1226266475, 2061006389, 1725699284, -2013583638, -104897820, -102193036, -392593743, 
      -910217294, 191274002, 1829132292, -1163282049, 1156359496, 1873106722, -808428785, 
      -624971069, -1773231263, -1984419277, -2071473058, 2002245030, 1866890668, -2066944851, 
      1108662405, -1378979896, -1318635253, 838775590, -1704722895, 705799968, -904092091, 
      -477406221, -527891163, -361567315, -2018104215, -1479490431, 1304138826, 2026486857, 
      198765837, 138446191, 545971571, 1257318468, -1294228733, -1876597616, 68785323, 803659031, 
      592401409, -1988797977, -37079375, 121707281, -1599115054, 1302816758, -1246661230, 
      -2054171505, -191741878, -1743958679, 1491002388, 2064915647, 1373814996, -637670881, 
      -236874114, -1965613846, -1055195786, 2136761575, -1139316777, -1440512466, 134309711, 
      -1713622195, 725682030, -1537542684, -1710309323, -1968637666, 9850604, 1265986355, 
      -574868567, -853162794, 1025885601, 1332760683, 137356597, 1755170948, 1899315397, 
      -1424431603, 915083970, -1398706884, 430058278, 1841329603, 1541681124, 1786685450, 
      -183140431, 56849455, 1651284078, -1780041673, -969729294, -1877992656, 337339287, 785322207, 
      1698052849, 570930400, 2086624539, 882121581, 799299627, 896808836, -2146411, 273501336, 
      -1668509316, 1964539986, 617469114, 215053950, 2021453949, -1058499431, 1863288773, 
      2062974011, 1095806657, 1778810105, 1586337312, 251657478, 844807153, 1338454177, -896886804, 
      -1065126056, -224246918, -469480324, 1004892521, 868717343, -625187645, 1610610098, 243859322, 
      -860422328, 1468087288, 772325576, -494185153, -447710192, -1843126214, 1542479746, 
      1942505302, 1131305547, -162332896, -40077857, -557875286, -1670346787, 823787950, -837918228, 
      795150822, -793401843, -1213464813, -1227219741, 1322952861, -448308691, -548696623, 
      -199274840, -1748468289, -1636739689, -1841384674, -1637889183, 1700133478, 1691169254...}, {
      1923459213, -1016069804, 2114587801, -1673077745, 1864059656, 2138459814, -565565628, 
      1233127431, 660367997, -547546111, -250417858, 1397653439, 534160473, -1002468139, -767506867, 
      1059319879, -20765054, 138556363, 1905378958, -1141666291, -1149881899, 637125213, 
      -1277489535, 1189186838, 316825941, 686091546, -48747749, 1683356256, 1589747393, 775702758, 
      1737072728, 1291333341, 583312205, 1629209225, 868483986, 1015835498, 50109041, -22631875, 
      -2103994146, 1129287329, -229657173, 1532444917, 194467878, -1926240808, -981367486, 
      1824381678, 1788599542, -903316550, 1770930744, 566475030, -975239777, -684906999, 
      -1329856744, 1143590839, 1712688660, 1050849216, -1997805195, 2025536428, -601300452, 
      1928486244, -1043458414, -1023474385, 142372328, -651512205, -1173919376, 440215367, 
      608467941, -1967734431, 695337130, 591555832, -977630568, 35841531, -1483934298, 277348322, 
      -640029724, 1646686695, -1471390201, 1722337078, 643234552, -545695624, 701509950, 
      -1906932384, -1834710739, -1491091246, 43558893, -1849923317, -2132278722, -1816542250, 
      114759634, -1454759769, 695525124, 639307803, -1895446350, -429240244, -1358870062, 959301689, 
      1059573163, 1322827572, 851349767, 711131136, 1395862433, -318448668, -1711748808, 2100407878, 
---Type <return> to continue, or q <return> to quit---
      1758958775, 565387825, 1685591065, 253585472, 1170444174, -492613386, 122273322, -1184131064, 
      1994136092, 181909586, -1551936749, -1292148461, -1931288642, 2064418947, 1143257579, 
      1858955209, 339583892, 1307437616, -350390051, 1834090215, 132463437, -898425170, 40088106, 
      249336487, 343066266, -1046644428, -79437026, -1726585724, 1248955359, 179369347, -429764185, 
      -431025278, 1211879314, -146999542, 653911588, 190872734, 1516008668, -1754303668, 1783818420, 
      385957174, 763990488, -991011034, -403726158, 1674472615, -1178773645, 1645553356, 
      -1502934155, 1039078498, -1579409236, 284905676, 652112740, -429769932, 1987313331, 437276541, 
      915737230, -1126416400, -1817008417, 1804709087, -1291819303, -1018074115, 1569698367, 
      1385649946, 1644722210, 1728134838, 1719262914, 1764396836, 1449513366, -1203477692, 
      -1614768592, 1689187237, -1023339575, -79936418, 1445797824, -1310482787, -964576910, 
      -2044905815, -1190657746, -1732232989, -1772280975, -1470003515, -1049883802, 1743517537, 
      2290828, 561806668, 140849133, 1667576075, -1874344004, 1242812806, 1051870225, 1293506821, 
      1181059246, 118979788, 1447276400, -1324417007, 2137887811, -216596372...}, {651051779, 
      -297184358, -1439429300, 1942687040, 330339376, 1210394549, -408867831, 573281683, -34415308, 
      -1918116813, 103488848, 58989280, -911914688, -824979381, 122313534, 461777803, -1982848144, 
      -1292877385, 262942198, 1849431778, 1546952932, -433740377, 752513212, 197567662, -1196158076, 
      -1388302079, -2047933685, 2035559257, -121661359, 468903184, -1846411776, 389653086, 
      -1130337485, 1527113992, 167768681, -1323780846, 1930691009, 1158273576, -1175889878, 
      -485514969, -1096577337, 531851373, -1851760267, 558380606, -1183534804, -1695865417, 
      1969121560, 158864260, -450827548, -842425380, -9884307, -1109911394, -597032076, 978748734, 
      831146562, 605751001, 355043511, 150668405, 1159301360, -479672162, -1331059245, -678131879, 
      -256012583, -757340563, -1924510066, 893588978, 2104769531, -913535037, -452722563, 
      -101235288, -271569516, 757613466, -831942603, 1028442621, -2128756671, -1227291492, 
      -991861177, -956242054, 2089151357, -1074152326, 1405912349, 1796523413, 734378348, 
      1613515558, 605682141, 15953901, -117943343, -1968753690, 400826278, 492331885, -563902373, 
      -2134343815, -450221353, 1699971731, -1391868621, -1278672094, 1599400509, -4497530, 
      -1271480898, -1489959925, 1480858975, 100047549, -910102203, -409132534, -1018164647, 
      1981488879, -1983021166, 1603769834, 838519268, -250946076, 1218238120, -831087455, 575115641, 
      774190897, 722636764, -1556546089, -1940544543, -158633613, -817301046, 1930233762, 
      -1226460128, -991374345, -142447458, -611795691, -450250374, 1591457759, 55072262, 1498190035, 
      1751143182, -1251537103, -1453016642, 2042069198, 1236887888, -1528333344, 857555498, 
      -497745016, 1374697169, -1956164395, 1653728142, 1742598230, 943365369, 954221868, 1626303385, 
      -2098884048, 1726068796, -1675994911, 1056092122, 567083430, 869100716, 262513889, 98642486, 
      201048579, 722801551, 208392500, 1529354386, 338695039, -289710605, -1723282845, -426257214, 
      948079452, 544350451, -518971927, 471918996, -229603319, 1366324258, -639110130, -414206324, 
      653906894, -1019327087, 487320041, 1845172438, 382070820, -1017816380, 898312955, 1164493253, 
      -521970168, 1070106019, 1573242215, 611607196, -756518704, -1043077810, 1420127253, 826439385, 
      2118107490, 1978783876, -1860848320, -492780101, 185507220, -735915964, 532041982, 1194353769, 
      -1201008793, -1262440979, -1003766344, 632265563, 618617479, 141907461, 269834655, -776437155, 
      -1000053592...}}, discardCount = {0, 1343031721, 475625602, 1477674688}, playedCards = {
    -1787722952, -1399921619, 1004428902, 1943707003, -1643256690, -777409757, -1115537973, 
    -550789202, -634988877, 196972689, 1257644986, 824135248, -541095479, -1242747803, -400743010, 
    1564856120, 913633691, -438766854, -549334440, -150970340, -675278916, -2014953472, 1041415410, 
    -890753148, -1296410049, -1128218462, 723347795, -1738351459, 582688099, -166539313, 1118625812, 
    246950788, 1433522637, 1926610820, -58072298, -903668881, -532765176, -2139916985, 868490618, 
    1974691624, 1286252881, 416139726, -1473181166, -1370139842, -1103984938, -1071355270, 
---Type <return> to continue, or q <return> to quit---
    -151540409, 742126712, -1233282748, 1519176457, 710846169, 281859311, 262871369, -1008464406, 
    -1141448850, 2025099864, 1179380450, -1636172507, 2139084543, 213247185, 732524865, -567223464, 
    -1754196224, -1611196942, -1876071687, -1769447076, -1933744170, 1682060423, -821630176, 
    -263431430, -1657385095, -712089802, 1249457328, -1870804065, -911369063, -1045627469, 
    1362995975, 953985077, -714971141, -839475035, 658066785, 1603592802, 1410885817, -967345607, 
    95656945, -873820256, 1181333798, -793754840, -708051247, -569681436, 1110693049, 159630578, 
    -324159399, -1286813978, 221843686, 1743436509, -1365657108, -1078234627, 488325432, 
    -1931145020, -828822797, -712260028, -1876311685, -120825274, 703038410, -1039133656, 695542028, 
    -940080214, 1167124832, 409235641, -409032905, 150005728, -1045691556, -762217690, 1887030015, 
    1941604451, -1937970563, 137166791, 530805951, 689858307, -1557511704, -84413802, 1866004998, 
    2137871065, 796454821, -1642185767, 1565248662, 2108421946, -155625910, 989463665, 491786223, 
    -676652917, -1394747891, -706847831, -1922964154, -1771346403, -651043802, 118789778, 
    -1958102891, 57576886, -2140458545, -1562640206, 600087480, 688735890, 514000996, 379943007, 
    -207602047, 636872003, -182016142, 665085739, -1956026328, 1052931367, 448892543, -216612856, 
    -1826979105, -833781714, 1164750050, 426357469, -1625090116, -627708229, 1806412472, 284980144, 
    -905460212, 1664536129, -483949349, 1175242225, 991593515, -1058408275, -1898674325, 
    -1532862356, -551728294, -764008691, 1982005785, -494850567, 294700746, -721357078, 46894424, 
    375105604, -596513582, 266591084, -462154502, 1723050325, 2050769936, 2081780780, -1138816914, 
    -428074760, 1312673027, -1162949183, 267734202, -708787474, 2114546210, 795341124, 420010240, 
    1276019851, -1998216741, 735076519, -1582063062, -1099320643, -1253360447, 1822516493...}, 
  playedCardCount = 1974966187}
(gdb) step
1250	  while( (*drawntreasure) < 2){
(gdb) 
1268	  *zr = z;
(gdb) 
1269	  while(z-1 >= 0){
(gdb) 
1270	    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = temphand[z-1]; // discard all cards in play that have been drawn
(gdb) 
1271	    z = z-1;
(gdb) print discard[currentPlayer]
No symbol "discard" in current context.
(gdb) print state->discard[currentPlayer]
$35 = {1, -1 <repeats 182 times>, 941865950, -2082458717, -1695339624, 809732088, -1443622027, 
  -1878189929, -1050356588, -1502426844, -232041148, 394957079, -1921314258, 1936777573, 297785580, 
  1982238434, 158352048, -745706614, 1461843694, -2032772387, 10772665, 1666651211, 626629866, 
  -1015832657, 1977117883, -24160958, -1896919224, -1829078059, -229192632, 361936313, 1234924944, 
  -894611668, 812457900, 545086191, 2032185688, 1806143218, 971495836, -2064170844, 1029278337, 
  1371695218, 1030817812, -924494521, -1692663407, -1960869821, -96545027, -2079199204, -2043179122, 
  2071418891, -1639881619, -258086693, 366418679, -1302859740, 1586166093, -735940583, -1515499011, 
  742590955, 889843411, 1924516332, 1532090307, -202765469, -404111252, 215926440, 531402903, 
  524792185, 412512208, -1647350925, -288950618, -96910982, 1186657429, -1697606839, -1480723633, 
  1535170905, -1424255412, -1319974694, -39274116, -162473315, 1168262190, -2015375509, -1647723126, 
  -2061762506, -2109534805, 827603956, 1415237729, -1811997800, 1135543801, 46168614, 689063156, 
  -808944389, -1648766778, -811432372, -720442896, -972113695, -446708564, -1381914155, -1508708081, 
  836371869, 999783092, -1121172548, 811031311, -1356041539, -437746657, 95128012, -641805834, 
  2069652322, -932343860, 562100408, 2136613970, -2081992107, 546767992, 1604285888, 192669744, 
  138634716, 411078014, -1749684163, -127819287, 2077576203, -2029563914, 285488000, 971243298, 
  -321632890, -1813933441, 1038516569, 1885297568, 1969951960, 462130983, -197842803, -1521793739, 
  -1070215158, -460770836, -663253694, -498748442, 1590079507, 369976563, -617475018, -1798833847, 
  -1475018776, 1024939456, -1540853336, 1475546799, 372891529, 920695643, 1435592356, 980667653, 
  -1036875199, -1109381629, 456238599, -981859676, -941216977, 457214851, 2069288630, 44586866, 
  1965611268, -1418809855, 15203516, -1579013250, -194182596, -73736509, 1852906668, -395652703, 
  2026833354, 177428431, -188263242, -1928176995, -178946938, 783590102, -1575906128, -812253181, 
  1837817528, 1274165578, 1579812901, 615265260, 1656219096, 675756243, 125294519, -1840810772, 
  729011697, 1507140105, 807700886, 635418296, -1338420771, 1962872480, -1100046423, 290661121, 
  -2093389329, -867764722, -1359257976, -874076687, 2031767062, -2065165205, 1113439656, 
  -1197330493...}
(gdb) step
1269	  while(z-1 >= 0){
(gdb) 
1270	    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = temphand[z-1]; // discard all cards in play that have been drawn
(gdb) 
1271	    z = z-1;
(gdb) print state->discard[currentPlayer]
$36 = {1, 0, -1 <repeats 181 times>, 941865950, -2082458717, -1695339624, 809732088, -1443622027, 
  -1878189929, -1050356588, -1502426844, -232041148, 394957079, -1921314258, 1936777573, 297785580, 
  1982238434, 158352048, -745706614, 1461843694, -2032772387, 10772665, 1666651211, 626629866, 
  -1015832657, 1977117883, -24160958, -1896919224, -1829078059, -229192632, 361936313, 1234924944, 
  -894611668, 812457900, 545086191, 2032185688, 1806143218, 971495836, -2064170844, 1029278337, 
  1371695218, 1030817812, -924494521, -1692663407, -1960869821, -96545027, -2079199204, -2043179122, 
  2071418891, -1639881619, -258086693, 366418679, -1302859740, 1586166093, -735940583, -1515499011, 
  742590955, 889843411, 1924516332, 1532090307, -202765469, -404111252, 215926440, 531402903, 
  524792185, 412512208, -1647350925, -288950618, -96910982, 1186657429, -1697606839, -1480723633, 
  1535170905, -1424255412, -1319974694, -39274116, -162473315, 1168262190, -2015375509, -1647723126, 
  -2061762506, -2109534805, 827603956, 1415237729, -1811997800, 1135543801, 46168614, 689063156, 
  -808944389, -1648766778, -811432372, -720442896, -972113695, -446708564, -1381914155, -1508708081, 
  836371869, 999783092, -1121172548, 811031311, -1356041539, -437746657, 95128012, -641805834, 
  2069652322, -932343860, 562100408, 2136613970, -2081992107, 546767992, 1604285888, 192669744, 
  138634716, 411078014, -1749684163, -127819287, 2077576203, -2029563914, 285488000, 971243298, 
  -321632890, -1813933441, 1038516569, 1885297568, 1969951960, 462130983, -197842803, -1521793739, 
  -1070215158, -460770836, -663253694, -498748442, 1590079507, 369976563, -617475018, -1798833847, 
  -1475018776, 1024939456, -1540853336, 1475546799, 372891529, 920695643, 1435592356, 980667653, 
  -1036875199, -1109381629, 456238599, -981859676, -941216977, 457214851, 2069288630, 44586866, 
  1965611268, -1418809855, 15203516, -1579013250, -194182596, -73736509, 1852906668, -395652703, 
  2026833354, 177428431, -188263242, -1928176995, -178946938, 783590102, -1575906128, -812253181, 
  1837817528, 1274165578, 1579812901, 615265260, 1656219096, 675756243, 125294519, -1840810772, 
  729011697, 1507140105, 807700886, 635418296, -1338420771, 1962872480, -1100046423, 290661121, 
  -2093389329, -867764722, -1359257976, -874076687, 2031767062, -2065165205, 1113439656...}
(gdb) step
1269	  while(z-1 >= 0){
(gdb) 
1270	    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = temphand[z-1]; // discard all cards in play that have been drawn
(gdb) 
1271	    z = z-1;
(gdb) print state->discard[currentPlayer]
$37 = {1, 0, 15, -1 <repeats 180 times>, 941865950, -2082458717, -1695339624, 809732088, 
  -1443622027, -1878189929, -1050356588, -1502426844, -232041148, 394957079, -1921314258, 
  1936777573, 297785580, 1982238434, 158352048, -745706614, 1461843694, -2032772387, 10772665, 
  1666651211, 626629866, -1015832657, 1977117883, -24160958, -1896919224, -1829078059, -229192632, 
  361936313, 1234924944, -894611668, 812457900, 545086191, 2032185688, 1806143218, 971495836, 
  -2064170844, 1029278337, 1371695218, 1030817812, -924494521, -1692663407, -1960869821, -96545027, 
  -2079199204, -2043179122, 2071418891, -1639881619, -258086693, 366418679, -1302859740, 1586166093, 
  -735940583, -1515499011, 742590955, 889843411, 1924516332, 1532090307, -202765469, -404111252, 
  215926440, 531402903, 524792185, 412512208, -1647350925, -288950618, -96910982, 1186657429, 
  -1697606839, -1480723633, 1535170905, -1424255412, -1319974694, -39274116, -162473315, 1168262190, 
  -2015375509, -1647723126, -2061762506, -2109534805, 827603956, 1415237729, -1811997800, 
  1135543801, 46168614, 689063156, -808944389, -1648766778, -811432372, -720442896, -972113695, 
  -446708564, -1381914155, -1508708081, 836371869, 999783092, -1121172548, 811031311, -1356041539, 
  -437746657, 95128012, -641805834, 2069652322, -932343860, 562100408, 2136613970, -2081992107, 
  546767992, 1604285888, 192669744, 138634716, 411078014, -1749684163, -127819287, 2077576203, 
  -2029563914, 285488000, 971243298, -321632890, -1813933441, 1038516569, 1885297568, 1969951960, 
  462130983, -197842803, -1521793739, -1070215158, -460770836, -663253694, -498748442, 1590079507, 
  369976563, -617475018, -1798833847, -1475018776, 1024939456, -1540853336, 1475546799, 372891529, 
  920695643, 1435592356, 980667653, -1036875199, -1109381629, 456238599, -981859676, -941216977, 
  457214851, 2069288630, 44586866, 1965611268, -1418809855, 15203516, -1579013250, -194182596, 
  -73736509, 1852906668, -395652703, 2026833354, 177428431, -188263242, -1928176995, -178946938, 
  783590102, -1575906128, -812253181, 1837817528, 1274165578, 1579812901, 615265260, 1656219096, 
  675756243, 125294519, -1840810772, 729011697, 1507140105, 807700886, 635418296, -1338420771, 
  1962872480, -1100046423, 290661121, -2093389329, -867764722, -1359257976, -874076687, 2031767062, 
  -2065165205...}
(gdb) step
1269	  while(z-1 >= 0){
(gdb) delete 4
No breakpoint number 4.
(gdb) delete 1
(gdb) delete 2
No breakpoint number 2.
(gdb) delete 3
No breakpoint number 3.
(gdb) delete 5
(gdb) delete 6
No breakpoint number 6.
(gdb) delete 7
No breakpoint number 7.
(gdb) watch *cardDrawn
Hardware watchpoint 6: *cardDrawn
(gdb) next
1270	    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = temphand[z-1]; // discard all cards in play that have been drawn
(gdb) continue
Continuing.

Watchpoint 6 deleted because the program has left the block in
which its expression is valid.
0x0000000000401ac1 in runTest (num=1, failure=0x7fffffffe2c4, special=1)
    at randomtestadventurer.c:137
137		result = playAdventurer(g, player, &cd, temphand, &dtreas, &tmpsize);
(gdb) run
The program being debugged has been started already.
Start it from the beginning? (y or n) y

Starting program: /OSUCoding/cs362/CS362-004-SP17/projects/jamesc2/dominion/randomtestadventurer 

######################### Testing playAdventurer #########################

playing adventurer
    PASSED TEST 1, Return is 0: returned = 0, expected = 0
    FAILED TEST 2, Pre & post is same: memcmp pre/post = 120, expected = 0
    FAILED TEST 3, discard count matches: pre = 188, post = 191
    FAILED TEST 4, deck count same: pre = 3, post = 0
    PASSED TEST 5, hand count same: pre = 27, post = 27
    PASSED TEST 6, top card in hand same: pre = 4, post = 4
    FAILED TEST 7, top card in deck same: pre = 21, post = -24307644
    PASSED TEST 8, top card in discard same: pre = 10, post = 10

------------ FAILURE - playAdventurer: 4/8 tests passed

[Inferior 1 (process 9061) exited normally]
(gdb) break playAdventurer
Breakpoint 7 at 0x4070ab: file dominion.c, line 1248.
(gdb) watch *cardDrawn
No symbol "cardDrawn" in current context.
(gdb) run
Starting program: /OSUCoding/cs362/CS362-004-SP17/projects/jamesc2/dominion/randomtestadventurer 

######################### Testing playAdventurer #########################


Breakpoint 7, playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, 
    temphand=0x7fffffffdac0, drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1248
1248	  printf("playing adventurer\n");
(gdb) continue
Continuing.
playing adventurer
    PASSED TEST 1, Return is 0: returned = 0, expected = 0
    FAILED TEST 2, Pre & post is same: memcmp pre/post = 120, expected = 0
    FAILED TEST 3, discard count matches: pre = 188, post = 191
    FAILED TEST 4, deck count same: pre = 3, post = 0
    PASSED TEST 5, hand count same: pre = 27, post = 27
    PASSED TEST 6, top card in hand same: pre = 4, post = 4
    FAILED TEST 7, top card in deck same: pre = 21, post = -24307644
    PASSED TEST 8, top card in discard same: pre = 10, post = 10

------------ FAILURE - playAdventurer: 4/8 tests passed

[Inferior 1 (process 9062) exited normally]
(gdb) break playAdventurer
Note: breakpoint 7 also set at pc 0x4070ab.
Breakpoint 8 at 0x4070ab: file dominion.c, line 1248.
(gdb) run
Starting program: /OSUCoding/cs362/CS362-004-SP17/projects/jamesc2/dominion/randomtestadventurer 

######################### Testing playAdventurer #########################


Breakpoint 7, playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, 
    temphand=0x7fffffffdac0, drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1248
1248	  printf("playing adventurer\n");
(gdb) watch *cardDrawn
Hardware watchpoint 9: *cardDrawn
(gdb) continue
Continuing.
playing adventurer
Hardware watchpoint 9: *cardDrawn

Old value = 0
New value = 10
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) print state->deck[currentPlayer]
$38 = {1, 21, 16, 4, 7, 19, 11, 23, 10, 1053986796, -918739237, -1713635100, 2056970397, 
  -2076346338, -31056727, -1984027855, -1547521733, -650763547, 588456963, 2114131937, 2352808, 
  1717669278, 870631733, -905064619, 1378037819, 959675699, 1069426345, 488070190, -1861565508, 
  -654171376, 1243029080, 1485546247, 223286675, 222850918, -553612386, -1704026990, 1138028005, 
  -34975722, -1135314788, -914655986, 84637294, 1758055280, -728560428, 1659013288, -679021232, 
  309216196, -413276509, 114926647, -533503630, 882427472, -1966271838, -629505903, -1375703595, 
  1942362524, 1068321614, -1085591018, -16375496, 305838686, 953707703, 1889157064, 2103898964, 
  347839624, -498199999, 188743817, 1046958302, 370062248, 1460896418, -1119199321, -256757577, 
  -1350333718, 385721335, 1662389591, -710929951, -516512196, -758582837, 585571805, 368875390, 
  -2130798311, -1248526450, 1488335687, -1375402625, 1949279390, -611265613, 1639689240, 
  -1742966043, -2081252620, 1050200102, 348915254, -1951697678, 1962937386, 2003903005, 667090997, 
  -1105358457, 1806082930, -899265888, -447837074, 920988880, -724693897, 1324091289, 334898087, 
  457519443, -1730901920, 1055462473, 854362076, 5198173, 1349711969, -42003993, -1540983529, 
  -551184358, -366794211, 429550196, -1302190839, 373745556, 1533649, 2083953667, 544067208, 
  375913760, 954651105, 1498922470, -1532209291, 1973430887, -621600137, 1028970641, 1842274935, 
  1488532424, 782304279, 10031922, -180570663, -875419415, -59238193, -782748884, 675094864, 
  924322425, 848512102, -1713696932, 808466227, -2024918631, -1595071950, -1518541817, -360297660, 
  641718701, -973052794, -936488998, -59626604, 1719376799, 696040979, -2005874568, 440440255, 
  -528982070, 570697641, -343426430, -1676996209, 10924075, 55648264, -880253541, 81633699, 
  1055463857, -359558853, 651932417, 1881129538, -1183515494, 782177477, 2108458494, 1897141708, 
  1452715135, 1217971447, -38765593, -1111787579, 96549797, -1322857778, 267145036, 1240422237, 
  1295821744, -1967838074, 1294456762, 1914219526, 1484535848, -802279854, -1304928910, -1279859186, 
  -2096628782, 2131580614, -1410273895, -1803047325, 1089940911, 560767494, 1967271302, -1034185847, 
  -143482227, 976714540, -686823289, 1383018556, 872818727, 1393952484, 426031655, 1319473860, 
  1236221682, 1753558494, -674301649, 333709014...}
(gdb) print state->discard[currentPlayer]
$39 = {1, 16, 12, 9, 12, 19, 12, 13, 2, 14, 8, 12, 14, 8, 15, 9, 21, 0, 12, 9, 19, 15, 11, 18, 0, 0, 
  25, 14, 7, 14, 13, 18, 15, 9, 17, 15, 12, 16, 14, 8, 25, 17, 23, 13, 12, 20, 9, 21, 15, 25, 25, 
  15, 8, 25, 13, 0, 25, 13, 2, 14, 20, 1, 19, 23, 15, 18, 23, 12, 16, 23, 17, 21, 2, 0, 19, 16, 9, 
  17, 11, 1, 25, 19, 12, 0, 22, 20, 20, 2, 21, 23, 3, 22, 10, 25, 18, 7, 12, 15, 15, 0, 16, 16, 9, 
  13, 9, 9, 8, 1, 10, 2, 17, 21, 17, 12, 9, 10, 22, 1, 20, 21, 1, 9, 22, 19, 2, 15, 13, 8, 11, 19, 
  7, 7, 19, 3, 0, 12, 3, 11, 10, 3, 14, 17, 16, 9, 19, 19, 20, 11, 9, 24, 21, 15, 15, 12, 21, 8, 20, 
  9, 20, 14, 25, 19, 23, 11, 9, 12, 13, 9, 19, 2, 18, 8, 19, 18, 1, 0, 11, 8, 12, 21, 0, 24, 1, 
  941865950, -2082458717, -1695339624, 809732088, -1443622027, -1878189929, -1050356588, 
  -1502426844, -232041148, 394957079, -1921314258, 1936777573, 297785580, 1982238434, 158352048, 
  -745706614, 1461843694...}
(gdb) print state->hand[currentPlayer]
$40 = {45363482, 1669165118, 1061954052, -1294502237, 774714609, 616260853, 2033629132, 9788660, 
  1051261174, -256071833, -403990421, 1297830941, 1931521145, -1637455732, 201702965, 83209568, 
  -263616402, 2123718806, -936661934, -1159142260, 634540734, 906771644, -1802553412, -902971350, 
  1630675565, 1302093808, 10, -2031040391, -1570884252, -1114660069, 1717808811, 1124532666, 
  -1537417953, -1604346055, -134769073, 1997184302, 672636504, -580246490, 1958222059, -2094312594, 
  292364962, -74119225, 6092253, 1744003410, 1527395177, -1605976876, 495279064, -635066074, 
  772680772, 2054464222, -1055101265, 364119872, -1498047641, 1178983166, 305243675, 541008942, 
  -272829920, 494201633, -1114260530, -1338343487, -397100480, -838606099, 1803214299, -974095382, 
  65419225, -1748507312, 716182939, -62567821, -696521553, 798741662, 944744633, -1279368266, 
  -598012603, -1419269028, 193724933, -261117616, -207729092, -301655096, 648109922, 1689009860, 
  1652107272, -742852311, 789598678, -677939114, -1440917430, 1681747808, -883047434, -2079002465, 
  825161386, -1973857048, 860743362, -843810157, 1241961058, 591983323, -1001539766, 690632954, 
  -482796449, -345594363, 2085875146, 628527506, -464405164, 165372498, -722976627, 2029765545, 
  1743776857, -1686641433, 1762479116, -1682917876, 1292008161, 1977952711, -572569605, -1163628486, 
  109237029, -1842465757, 1737828833, 2084453487, -1192451247, 386435088, -1482776293, 664212658, 
  -1991598446, 1852586764, -290370748, -2028691044, 2128524062, -1138234412, -735644038, 
  -1915871517, -408901485, -90651592, 1881374921, 162914512, -1904734598, -1954466856, 850438213, 
  -2064233017, 1636087565, 1238277503, -2087928038, -128281802, -1176176941, -986904768, 2052568662, 
  1129792266, -262757668, -1537701230, 900621272, -376638894, 1183602960, -1493300561, -160059205, 
  -580014434, -976562064, 448532223, -1932695363, 197450002, -922683426, 1352239510, -508862304, 
  -1137772533, 1958150247, 1739714563, 1041914047, -1211972846, -133266374, 1024712066, 100778150, 
  -1509821147, 1193842295, -573542201, 1169999094, 928583634, 1266726148, 563245874, 1078712660, 
  681790027, -1161165876, 456548491, -1988913006, 2008656779, -1605805624, 1190971022, -956047600, 
  -202405506, -1644333037, 2057560565, 783748875, -148360253, -837500754, -1061468518, 449293574, 
  310991884, -2136999864, 1015918868, 768502972, 739291829, -562490065, 615328723, -773613382, 
  -1607902864...}
(gdb) list
1254	      shuffle(currentPlayer, state);
1255	    }
1256	    drawCard(currentPlayer, state);
1257	    *cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
1258	    // printf("cardDrawn=%d\n", *cardDrawn);
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
1260	      (*drawntreasure)++;
1261	    else{
1262	      temphand[z] = (*cardDrawn);
1263	      state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
(gdb) next
1262	      temphand[z] = (*cardDrawn);
(gdb) 
1263	      state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
(gdb) 
1264	      z++;
(gdb) 
1250	  while( (*drawntreasure) < 2){
(gdb) print state->hand[currentPlayer]
$41 = {45363482, 1669165118, 1061954052, -1294502237, 774714609, 616260853, 2033629132, 9788660, 
  1051261174, -256071833, -403990421, 1297830941, 1931521145, -1637455732, 201702965, 83209568, 
  -263616402, 2123718806, -936661934, -1159142260, 634540734, 906771644, -1802553412, -902971350, 
  1630675565, 1302093808, 10, -2031040391, -1570884252, -1114660069, 1717808811, 1124532666, 
  -1537417953, -1604346055, -134769073, 1997184302, 672636504, -580246490, 1958222059, -2094312594, 
  292364962, -74119225, 6092253, 1744003410, 1527395177, -1605976876, 495279064, -635066074, 
  772680772, 2054464222, -1055101265, 364119872, -1498047641, 1178983166, 305243675, 541008942, 
  -272829920, 494201633, -1114260530, -1338343487, -397100480, -838606099, 1803214299, -974095382, 
  65419225, -1748507312, 716182939, -62567821, -696521553, 798741662, 944744633, -1279368266, 
  -598012603, -1419269028, 193724933, -261117616, -207729092, -301655096, 648109922, 1689009860, 
  1652107272, -742852311, 789598678, -677939114, -1440917430, 1681747808, -883047434, -2079002465, 
  825161386, -1973857048, 860743362, -843810157, 1241961058, 591983323, -1001539766, 690632954, 
  -482796449, -345594363, 2085875146, 628527506, -464405164, 165372498, -722976627, 2029765545, 
  1743776857, -1686641433, 1762479116, -1682917876, 1292008161, 1977952711, -572569605, -1163628486, 
  109237029, -1842465757, 1737828833, 2084453487, -1192451247, 386435088, -1482776293, 664212658, 
  -1991598446, 1852586764, -290370748, -2028691044, 2128524062, -1138234412, -735644038, 
  -1915871517, -408901485, -90651592, 1881374921, 162914512, -1904734598, -1954466856, 850438213, 
  -2064233017, 1636087565, 1238277503, -2087928038, -128281802, -1176176941, -986904768, 2052568662, 
  1129792266, -262757668, -1537701230, 900621272, -376638894, 1183602960, -1493300561, -160059205, 
  -580014434, -976562064, 448532223, -1932695363, 197450002, -922683426, 1352239510, -508862304, 
  -1137772533, 1958150247, 1739714563, 1041914047, -1211972846, -133266374, 1024712066, 100778150, 
  -1509821147, 1193842295, -573542201, 1169999094, 928583634, 1266726148, 563245874, 1078712660, 
  681790027, -1161165876, 456548491, -1988913006, 2008656779, -1605805624, 1190971022, -956047600, 
  -202405506, -1644333037, 2057560565, 783748875, -148360253, -837500754, -1061468518, 449293574, 
  310991884, -2136999864, 1015918868, 768502972, 739291829, -562490065, 615328723, -773613382, 
  -1607902864...}
(gdb) next
1253	    if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
(gdb) 
1256	    drawCard(currentPlayer, state);
(gdb) 
1257	    *cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
(gdb) 
Hardware watchpoint 9: *cardDrawn

Old value = 10
New value = 23
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) print state->hand[currentPlayer]
$42 = {45363482, 1669165118, 1061954052, -1294502237, 774714609, 616260853, 2033629132, 9788660, 
  1051261174, -256071833, -403990421, 1297830941, 1931521145, -1637455732, 201702965, 83209568, 
  -263616402, 2123718806, -936661934, -1159142260, 634540734, 906771644, -1802553412, -902971350, 
  1630675565, 1302093808, 23, -2031040391, -1570884252, -1114660069, 1717808811, 1124532666, 
  -1537417953, -1604346055, -134769073, 1997184302, 672636504, -580246490, 1958222059, -2094312594, 
  292364962, -74119225, 6092253, 1744003410, 1527395177, -1605976876, 495279064, -635066074, 
  772680772, 2054464222, -1055101265, 364119872, -1498047641, 1178983166, 305243675, 541008942, 
  -272829920, 494201633, -1114260530, -1338343487, -397100480, -838606099, 1803214299, -974095382, 
  65419225, -1748507312, 716182939, -62567821, -696521553, 798741662, 944744633, -1279368266, 
  -598012603, -1419269028, 193724933, -261117616, -207729092, -301655096, 648109922, 1689009860, 
  1652107272, -742852311, 789598678, -677939114, -1440917430, 1681747808, -883047434, -2079002465, 
  825161386, -1973857048, 860743362, -843810157, 1241961058, 591983323, -1001539766, 690632954, 
  -482796449, -345594363, 2085875146, 628527506, -464405164, 165372498, -722976627, 2029765545, 
  1743776857, -1686641433, 1762479116, -1682917876, 1292008161, 1977952711, -572569605, -1163628486, 
  109237029, -1842465757, 1737828833, 2084453487, -1192451247, 386435088, -1482776293, 664212658, 
  -1991598446, 1852586764, -290370748, -2028691044, 2128524062, -1138234412, -735644038, 
  -1915871517, -408901485, -90651592, 1881374921, 162914512, -1904734598, -1954466856, 850438213, 
  -2064233017, 1636087565, 1238277503, -2087928038, -128281802, -1176176941, -986904768, 2052568662, 
  1129792266, -262757668, -1537701230, 900621272, -376638894, 1183602960, -1493300561, -160059205, 
  -580014434, -976562064, 448532223, -1932695363, 197450002, -922683426, 1352239510, -508862304, 
  -1137772533, 1958150247, 1739714563, 1041914047, -1211972846, -133266374, 1024712066, 100778150, 
  -1509821147, 1193842295, -573542201, 1169999094, 928583634, 1266726148, 563245874, 1078712660, 
  681790027, -1161165876, 456548491, -1988913006, 2008656779, -1605805624, 1190971022, -956047600, 
  -202405506, -1644333037, 2057560565, 783748875, -148360253, -837500754, -1061468518, 449293574, 
  310991884, -2136999864, 1015918868, 768502972, 739291829, -562490065, 615328723, -773613382, 
  -1607902864...}
(gdb) print state->handCount[currentPlayer]
$43 = 27
(gdb) next
1262	      temphand[z] = (*cardDrawn);
(gdb) continue
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 23
New value = 11
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) print state->handCount[currentPlayer]
$44 = 27
(gdb) print state->hand[currentPlayer]
$45 = {45363482, 1669165118, 1061954052, -1294502237, 774714609, 616260853, 2033629132, 9788660, 
  1051261174, -256071833, -403990421, 1297830941, 1931521145, -1637455732, 201702965, 83209568, 
  -263616402, 2123718806, -936661934, -1159142260, 634540734, 906771644, -1802553412, -902971350, 
  1630675565, 1302093808, 11, -2031040391, -1570884252, -1114660069, 1717808811, 1124532666, 
  -1537417953, -1604346055, -134769073, 1997184302, 672636504, -580246490, 1958222059, -2094312594, 
  292364962, -74119225, 6092253, 1744003410, 1527395177, -1605976876, 495279064, -635066074, 
  772680772, 2054464222, -1055101265, 364119872, -1498047641, 1178983166, 305243675, 541008942, 
  -272829920, 494201633, -1114260530, -1338343487, -397100480, -838606099, 1803214299, -974095382, 
  65419225, -1748507312, 716182939, -62567821, -696521553, 798741662, 944744633, -1279368266, 
  -598012603, -1419269028, 193724933, -261117616, -207729092, -301655096, 648109922, 1689009860, 
  1652107272, -742852311, 789598678, -677939114, -1440917430, 1681747808, -883047434, -2079002465, 
  825161386, -1973857048, 860743362, -843810157, 1241961058, 591983323, -1001539766, 690632954, 
  -482796449, -345594363, 2085875146, 628527506, -464405164, 165372498, -722976627, 2029765545, 
  1743776857, -1686641433, 1762479116, -1682917876, 1292008161, 1977952711, -572569605, -1163628486, 
  109237029, -1842465757, 1737828833, 2084453487, -1192451247, 386435088, -1482776293, 664212658, 
  -1991598446, 1852586764, -290370748, -2028691044, 2128524062, -1138234412, -735644038, 
  -1915871517, -408901485, -90651592, 1881374921, 162914512, -1904734598, -1954466856, 850438213, 
  -2064233017, 1636087565, 1238277503, -2087928038, -128281802, -1176176941, -986904768, 2052568662, 
  1129792266, -262757668, -1537701230, 900621272, -376638894, 1183602960, -1493300561, -160059205, 
  -580014434, -976562064, 448532223, -1932695363, 197450002, -922683426, 1352239510, -508862304, 
  -1137772533, 1958150247, 1739714563, 1041914047, -1211972846, -133266374, 1024712066, 100778150, 
  -1509821147, 1193842295, -573542201, 1169999094, 928583634, 1266726148, 563245874, 1078712660, 
  681790027, -1161165876, 456548491, -1988913006, 2008656779, -1605805624, 1190971022, -956047600, 
  -202405506, -1644333037, 2057560565, 783748875, -148360253, -837500754, -1061468518, 449293574, 
  310991884, -2136999864, 1015918868, 768502972, 739291829, -562490065, 615328723, -773613382, 
  -1607902864...}
(gdb) continue
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 11
New value = 19
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) print state->hand[currentPlayer]
$46 = {45363482, 1669165118, 1061954052, -1294502237, 774714609, 616260853, 2033629132, 9788660, 
  1051261174, -256071833, -403990421, 1297830941, 1931521145, -1637455732, 201702965, 83209568, 
  -263616402, 2123718806, -936661934, -1159142260, 634540734, 906771644, -1802553412, -902971350, 
  1630675565, 1302093808, 19, -2031040391, -1570884252, -1114660069, 1717808811, 1124532666, 
  -1537417953, -1604346055, -134769073, 1997184302, 672636504, -580246490, 1958222059, -2094312594, 
  292364962, -74119225, 6092253, 1744003410, 1527395177, -1605976876, 495279064, -635066074, 
  772680772, 2054464222, -1055101265, 364119872, -1498047641, 1178983166, 305243675, 541008942, 
  -272829920, 494201633, -1114260530, -1338343487, -397100480, -838606099, 1803214299, -974095382, 
  65419225, -1748507312, 716182939, -62567821, -696521553, 798741662, 944744633, -1279368266, 
  -598012603, -1419269028, 193724933, -261117616, -207729092, -301655096, 648109922, 1689009860, 
  1652107272, -742852311, 789598678, -677939114, -1440917430, 1681747808, -883047434, -2079002465, 
  825161386, -1973857048, 860743362, -843810157, 1241961058, 591983323, -1001539766, 690632954, 
  -482796449, -345594363, 2085875146, 628527506, -464405164, 165372498, -722976627, 2029765545, 
  1743776857, -1686641433, 1762479116, -1682917876, 1292008161, 1977952711, -572569605, -1163628486, 
  109237029, -1842465757, 1737828833, 2084453487, -1192451247, 386435088, -1482776293, 664212658, 
  -1991598446, 1852586764, -290370748, -2028691044, 2128524062, -1138234412, -735644038, 
  -1915871517, -408901485, -90651592, 1881374921, 162914512, -1904734598, -1954466856, 850438213, 
  -2064233017, 1636087565, 1238277503, -2087928038, -128281802, -1176176941, -986904768, 2052568662, 
  1129792266, -262757668, -1537701230, 900621272, -376638894, 1183602960, -1493300561, -160059205, 
  -580014434, -976562064, 448532223, -1932695363, 197450002, -922683426, 1352239510, -508862304, 
  -1137772533, 1958150247, 1739714563, 1041914047, -1211972846, -133266374, 1024712066, 100778150, 
  -1509821147, 1193842295, -573542201, 1169999094, 928583634, 1266726148, 563245874, 1078712660, 
  681790027, -1161165876, 456548491, -1988913006, 2008656779, -1605805624, 1190971022, -956047600, 
  -202405506, -1644333037, 2057560565, 783748875, -148360253, -837500754, -1061468518, 449293574, 
  310991884, -2136999864, 1015918868, 768502972, 739291829, -562490065, 615328723, -773613382, 
  -1607902864...}
(gdb) continue
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 19
New value = 7
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) print state->hand[currentPlayer]
$47 = {45363482, 1669165118, 1061954052, -1294502237, 774714609, 616260853, 2033629132, 9788660, 
  1051261174, -256071833, -403990421, 1297830941, 1931521145, -1637455732, 201702965, 83209568, 
  -263616402, 2123718806, -936661934, -1159142260, 634540734, 906771644, -1802553412, -902971350, 
  1630675565, 1302093808, 7, -2031040391, -1570884252, -1114660069, 1717808811, 1124532666, 
  -1537417953, -1604346055, -134769073, 1997184302, 672636504, -580246490, 1958222059, -2094312594, 
  292364962, -74119225, 6092253, 1744003410, 1527395177, -1605976876, 495279064, -635066074, 
  772680772, 2054464222, -1055101265, 364119872, -1498047641, 1178983166, 305243675, 541008942, 
  -272829920, 494201633, -1114260530, -1338343487, -397100480, -838606099, 1803214299, -974095382, 
  65419225, -1748507312, 716182939, -62567821, -696521553, 798741662, 944744633, -1279368266, 
  -598012603, -1419269028, 193724933, -261117616, -207729092, -301655096, 648109922, 1689009860, 
  1652107272, -742852311, 789598678, -677939114, -1440917430, 1681747808, -883047434, -2079002465, 
  825161386, -1973857048, 860743362, -843810157, 1241961058, 591983323, -1001539766, 690632954, 
  -482796449, -345594363, 2085875146, 628527506, -464405164, 165372498, -722976627, 2029765545, 
  1743776857, -1686641433, 1762479116, -1682917876, 1292008161, 1977952711, -572569605, -1163628486, 
  109237029, -1842465757, 1737828833, 2084453487, -1192451247, 386435088, -1482776293, 664212658, 
  -1991598446, 1852586764, -290370748, -2028691044, 2128524062, -1138234412, -735644038, 
  -1915871517, -408901485, -90651592, 1881374921, 162914512, -1904734598, -1954466856, 850438213, 
  -2064233017, 1636087565, 1238277503, -2087928038, -128281802, -1176176941, -986904768, 2052568662, 
  1129792266, -262757668, -1537701230, 900621272, -376638894, 1183602960, -1493300561, -160059205, 
  -580014434, -976562064, 448532223, -1932695363, 197450002, -922683426, 1352239510, -508862304, 
  -1137772533, 1958150247, 1739714563, 1041914047, -1211972846, -133266374, 1024712066, 100778150, 
  -1509821147, 1193842295, -573542201, 1169999094, 928583634, 1266726148, 563245874, 1078712660, 
  681790027, -1161165876, 456548491, -1988913006, 2008656779, -1605805624, 1190971022, -956047600, 
  -202405506, -1644333037, 2057560565, 783748875, -148360253, -837500754, -1061468518, 449293574, 
  310991884, -2136999864, 1015918868, 768502972, 739291829, -562490065, 615328723, -773613382, 
  -1607902864...}
(gdb) continue
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 7
New value = 4
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) next
1260	      (*drawntreasure)++;
(gdb) print *drawntreasure
$48 = 0
(gdb) next
1250	  while( (*drawntreasure) < 2){
(gdb) print *drawntreasure
$49 = 1
(gdb) continue
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 4
New value = 16
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) print state->hand[currentPlayer]
$50 = {45363482, 1669165118, 1061954052, -1294502237, 774714609, 616260853, 2033629132, 9788660, 
  1051261174, -256071833, -403990421, 1297830941, 1931521145, -1637455732, 201702965, 83209568, 
  -263616402, 2123718806, -936661934, -1159142260, 634540734, 906771644, -1802553412, -902971350, 
  1630675565, 1302093808, 4, 16, -1570884252, -1114660069, 1717808811, 1124532666, -1537417953, 
  -1604346055, -134769073, 1997184302, 672636504, -580246490, 1958222059, -2094312594, 292364962, 
  -74119225, 6092253, 1744003410, 1527395177, -1605976876, 495279064, -635066074, 772680772, 
  2054464222, -1055101265, 364119872, -1498047641, 1178983166, 305243675, 541008942, -272829920, 
  494201633, -1114260530, -1338343487, -397100480, -838606099, 1803214299, -974095382, 65419225, 
  -1748507312, 716182939, -62567821, -696521553, 798741662, 944744633, -1279368266, -598012603, 
  -1419269028, 193724933, -261117616, -207729092, -301655096, 648109922, 1689009860, 1652107272, 
  -742852311, 789598678, -677939114, -1440917430, 1681747808, -883047434, -2079002465, 825161386, 
  -1973857048, 860743362, -843810157, 1241961058, 591983323, -1001539766, 690632954, -482796449, 
  -345594363, 2085875146, 628527506, -464405164, 165372498, -722976627, 2029765545, 1743776857, 
  -1686641433, 1762479116, -1682917876, 1292008161, 1977952711, -572569605, -1163628486, 109237029, 
  -1842465757, 1737828833, 2084453487, -1192451247, 386435088, -1482776293, 664212658, -1991598446, 
  1852586764, -290370748, -2028691044, 2128524062, -1138234412, -735644038, -1915871517, -408901485, 
  -90651592, 1881374921, 162914512, -1904734598, -1954466856, 850438213, -2064233017, 1636087565, 
  1238277503, -2087928038, -128281802, -1176176941, -986904768, 2052568662, 1129792266, -262757668, 
  -1537701230, 900621272, -376638894, 1183602960, -1493300561, -160059205, -580014434, -976562064, 
  448532223, -1932695363, 197450002, -922683426, 1352239510, -508862304, -1137772533, 1958150247, 
  1739714563, 1041914047, -1211972846, -133266374, 1024712066, 100778150, -1509821147, 1193842295, 
  -573542201, 1169999094, 928583634, 1266726148, 563245874, 1078712660, 681790027, -1161165876, 
  456548491, -1988913006, 2008656779, -1605805624, 1190971022, -956047600, -202405506, -1644333037, 
  2057560565, 783748875, -148360253, -837500754, -1061468518, 449293574, 310991884, -2136999864, 
  1015918868, 768502972, 739291829, -562490065, 615328723, -773613382, -1607902864...}
(gdb) print state->handCount[currentPlayer]
$51 = 28
(gdb) continue
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 16
New value = 21
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) print state->hand[currentPlayer]
$52 = {45363482, 1669165118, 1061954052, -1294502237, 774714609, 616260853, 2033629132, 9788660, 
  1051261174, -256071833, -403990421, 1297830941, 1931521145, -1637455732, 201702965, 83209568, 
  -263616402, 2123718806, -936661934, -1159142260, 634540734, 906771644, -1802553412, -902971350, 
  1630675565, 1302093808, 4, 21, -1570884252, -1114660069, 1717808811, 1124532666, -1537417953, 
  -1604346055, -134769073, 1997184302, 672636504, -580246490, 1958222059, -2094312594, 292364962, 
  -74119225, 6092253, 1744003410, 1527395177, -1605976876, 495279064, -635066074, 772680772, 
  2054464222, -1055101265, 364119872, -1498047641, 1178983166, 305243675, 541008942, -272829920, 
  494201633, -1114260530, -1338343487, -397100480, -838606099, 1803214299, -974095382, 65419225, 
  -1748507312, 716182939, -62567821, -696521553, 798741662, 944744633, -1279368266, -598012603, 
  -1419269028, 193724933, -261117616, -207729092, -301655096, 648109922, 1689009860, 1652107272, 
  -742852311, 789598678, -677939114, -1440917430, 1681747808, -883047434, -2079002465, 825161386, 
  -1973857048, 860743362, -843810157, 1241961058, 591983323, -1001539766, 690632954, -482796449, 
  -345594363, 2085875146, 628527506, -464405164, 165372498, -722976627, 2029765545, 1743776857, 
  -1686641433, 1762479116, -1682917876, 1292008161, 1977952711, -572569605, -1163628486, 109237029, 
  -1842465757, 1737828833, 2084453487, -1192451247, 386435088, -1482776293, 664212658, -1991598446, 
  1852586764, -290370748, -2028691044, 2128524062, -1138234412, -735644038, -1915871517, -408901485, 
  -90651592, 1881374921, 162914512, -1904734598, -1954466856, 850438213, -2064233017, 1636087565, 
  1238277503, -2087928038, -128281802, -1176176941, -986904768, 2052568662, 1129792266, -262757668, 
  -1537701230, 900621272, -376638894, 1183602960, -1493300561, -160059205, -580014434, -976562064, 
  448532223, -1932695363, 197450002, -922683426, 1352239510, -508862304, -1137772533, 1958150247, 
  1739714563, 1041914047, -1211972846, -133266374, 1024712066, 100778150, -1509821147, 1193842295, 
  -573542201, 1169999094, 928583634, 1266726148, 563245874, 1078712660, 681790027, -1161165876, 
  456548491, -1988913006, 2008656779, -1605805624, 1190971022, -956047600, -202405506, -1644333037, 
  2057560565, 783748875, -148360253, -837500754, -1061468518, 449293574, 310991884, -2136999864, 
  1015918868, 768502972, 739291829, -562490065, 615328723, -773613382, -1607902864...}
(gdb) continue
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 21
New value = 1
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) print state->hand[currentPlayer]
$53 = {45363482, 1669165118, 1061954052, -1294502237, 774714609, 616260853, 2033629132, 9788660, 
  1051261174, -256071833, -403990421, 1297830941, 1931521145, -1637455732, 201702965, 83209568, 
  -263616402, 2123718806, -936661934, -1159142260, 634540734, 906771644, -1802553412, -902971350, 
  1630675565, 1302093808, 4, 1, -1570884252, -1114660069, 1717808811, 1124532666, -1537417953, 
  -1604346055, -134769073, 1997184302, 672636504, -580246490, 1958222059, -2094312594, 292364962, 
  -74119225, 6092253, 1744003410, 1527395177, -1605976876, 495279064, -635066074, 772680772, 
  2054464222, -1055101265, 364119872, -1498047641, 1178983166, 305243675, 541008942, -272829920, 
  494201633, -1114260530, -1338343487, -397100480, -838606099, 1803214299, -974095382, 65419225, 
  -1748507312, 716182939, -62567821, -696521553, 798741662, 944744633, -1279368266, -598012603, 
  -1419269028, 193724933, -261117616, -207729092, -301655096, 648109922, 1689009860, 1652107272, 
  -742852311, 789598678, -677939114, -1440917430, 1681747808, -883047434, -2079002465, 825161386, 
  -1973857048, 860743362, -843810157, 1241961058, 591983323, -1001539766, 690632954, -482796449, 
  -345594363, 2085875146, 628527506, -464405164, 165372498, -722976627, 2029765545, 1743776857, 
  -1686641433, 1762479116, -1682917876, 1292008161, 1977952711, -572569605, -1163628486, 109237029, 
  -1842465757, 1737828833, 2084453487, -1192451247, 386435088, -1482776293, 664212658, -1991598446, 
  1852586764, -290370748, -2028691044, 2128524062, -1138234412, -735644038, -1915871517, -408901485, 
  -90651592, 1881374921, 162914512, -1904734598, -1954466856, 850438213, -2064233017, 1636087565, 
  1238277503, -2087928038, -128281802, -1176176941, -986904768, 2052568662, 1129792266, -262757668, 
  -1537701230, 900621272, -376638894, 1183602960, -1493300561, -160059205, -580014434, -976562064, 
  448532223, -1932695363, 197450002, -922683426, 1352239510, -508862304, -1137772533, 1958150247, 
  1739714563, 1041914047, -1211972846, -133266374, 1024712066, 100778150, -1509821147, 1193842295, 
  -573542201, 1169999094, 928583634, 1266726148, 563245874, 1078712660, 681790027, -1161165876, 
  456548491, -1988913006, 2008656779, -1605805624, 1190971022, -956047600, -202405506, -1644333037, 
  2057560565, 783748875, -148360253, -837500754, -1061468518, 449293574, 310991884, -2136999864, 
  1015918868, 768502972, 739291829, -562490065, 615328723, -773613382, -1607902864...}
(gdb) step
1262	      temphand[z] = (*cardDrawn);
(gdb) 
1263	      state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
(gdb) 
1264	      z++;
(gdb) print state->deckCount[currentPlayer]
$54 = 0
(gdb) step
1250	  while( (*drawntreasure) < 2){
(gdb) 
1253	    if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
(gdb) 
1254	      shuffle(currentPlayer, state);
(gdb) 
shuffle (player=0, state=0x610010) at dominion.c:205
205	  int newDeckPos = 0;
(gdb) 
209	  if (state->deckCount[player] < 1)
(gdb) 
210	    return -1;
(gdb) 
229	}
(gdb) 
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1256
1256	    drawCard(currentPlayer, state);
(gdb) 
drawCard (player=0, state=0x610010) at dominion.c:528
528	  if (state->deckCount[player] <= 0){//Deck is empty
(gdb) 
533	    for (i = 0; i < state->discardCount[player];i++){
(gdb) 
534	      state->deck[player][i] = state->discard[player][i];
(gdb) 
535	      state->discard[player][i] = -1;
(gdb) 
533	    for (i = 0; i < state->discardCount[player];i++){
(gdb) 
534	      state->deck[player][i] = state->discard[player][i];
(gdb) 
535	      state->discard[player][i] = -1;
(gdb) 
533	    for (i = 0; i < state->discardCount[player];i++){
(gdb) next
534	      state->deck[player][i] = state->discard[player][i];
(gdb) 
535	      state->discard[player][i] = -1;
(gdb) 
533	    for (i = 0; i < state->discardCount[player];i++){
(gdb) until 536
drawCard (player=0, state=0x610010) at dominion.c:538
538	    state->deckCount[player] = state->discardCount[player];
(gdb) print state->deck[player]
$55 = {1, 16, 12, 9, 12, 19, 12, 13, 2, 14, 8, 12, 14, 8, 15, 9, 21, 0, 12, 9, 19, 15, 11, 18, 0, 0, 
  25, 14, 7, 14, 13, 18, 15, 9, 17, 15, 12, 16, 14, 8, 25, 17, 23, 13, 12, 20, 9, 21, 15, 25, 25, 
  15, 8, 25, 13, 0, 25, 13, 2, 14, 20, 1, 19, 23, 15, 18, 23, 12, 16, 23, 17, 21, 2, 0, 19, 16, 9, 
  17, 11, 1, 25, 19, 12, 0, 22, 20, 20, 2, 21, 23, 3, 22, 10, 25, 18, 7, 12, 15, 15, 0, 16, 16, 9, 
  13, 9, 9, 8, 1, 10, 2, 17, 21, 17, 12, 9, 10, 22, 1, 20, 21, 1, 9, 22, 19, 2, 15, 13, 8, 11, 19, 
  7, 7, 19, 3, 0, 12, 3, 11, 10, 3, 14, 17, 16, 9, 19, 19, 20, 11, 9, 24, 21, 15, 15, 12, 21, 8, 20, 
  9, 20, 14, 25, 19, 23, 11, 9, 12, 13, 9, 19, 2, 18, 8, 19, 18, 1, 0, 11, 8, 12, 21, 0, 24, 1, 
  -1803047325, 1089940911, 560767494, 1967271302, -1034185847, -143482227, 976714540, -686823289, 
  1383018556, 872818727, 1393952484, 426031655, 1319473860, 1236221682, 1753558494, -674301649, 
  333709014...}
(gdb) print state->discard[player]
$56 = {-1 <repeats 183 times>, 941865950, -2082458717, -1695339624, 809732088, -1443622027, 
  -1878189929, -1050356588, -1502426844, -232041148, 394957079, -1921314258, 1936777573, 297785580, 
  1982238434, 158352048, -745706614, 1461843694, -2032772387, 10772665, 1666651211, 626629866, 
  -1015832657, 1977117883, -24160958, -1896919224, -1829078059, -229192632, 361936313, 1234924944, 
  -894611668, 812457900, 545086191, 2032185688, 1806143218, 971495836, -2064170844, 1029278337, 
  1371695218, 1030817812, -924494521, -1692663407, -1960869821, -96545027, -2079199204, -2043179122, 
  2071418891, -1639881619, -258086693, 366418679, -1302859740, 1586166093, -735940583, -1515499011, 
  742590955, 889843411, 1924516332, 1532090307, -202765469, -404111252, 215926440, 531402903, 
  524792185, 412512208, -1647350925, -288950618, -96910982, 1186657429, -1697606839, -1480723633, 
  1535170905, -1424255412, -1319974694, -39274116, -162473315, 1168262190, -2015375509, -1647723126, 
  -2061762506, -2109534805, 827603956, 1415237729, -1811997800, 1135543801, 46168614, 689063156, 
  -808944389, -1648766778, -811432372, -720442896, -972113695, -446708564, -1381914155, -1508708081, 
  836371869, 999783092, -1121172548, 811031311, -1356041539, -437746657, 95128012, -641805834, 
  2069652322, -932343860, 562100408, 2136613970, -2081992107, 546767992, 1604285888, 192669744, 
  138634716, 411078014, -1749684163, -127819287, 2077576203, -2029563914, 285488000, 971243298, 
  -321632890, -1813933441, 1038516569, 1885297568, 1969951960, 462130983, -197842803, -1521793739, 
  -1070215158, -460770836, -663253694, -498748442, 1590079507, 369976563, -617475018, -1798833847, 
  -1475018776, 1024939456, -1540853336, 1475546799, 372891529, 920695643, 1435592356, 980667653, 
  -1036875199, -1109381629, 456238599, -981859676, -941216977, 457214851, 2069288630, 44586866, 
  1965611268, -1418809855, 15203516, -1579013250, -194182596, -73736509, 1852906668, -395652703, 
  2026833354, 177428431, -188263242, -1928176995, -178946938, 783590102, -1575906128, -812253181, 
  1837817528, 1274165578, 1579812901, 615265260, 1656219096, 675756243, 125294519, -1840810772, 
  729011697, 1507140105, 807700886, 635418296, -1338420771, 1962872480, -1100046423, 290661121, 
  -2093389329, -867764722, -1359257976, -874076687, 2031767062, -2065165205, 1113439656, 
  -1197330493, -1630632003...}
(gdb) step
539	    state->discardCount[player] = 0;//Reset discard
(gdb) 
542	    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
(gdb) print state->deck[player]
$57 = {1, 16, 12, 9, 12, 19, 12, 13, 2, 14, 8, 12, 14, 8, 15, 9, 21, 0, 12, 9, 19, 15, 11, 18, 0, 0, 
  25, 14, 7, 14, 13, 18, 15, 9, 17, 15, 12, 16, 14, 8, 25, 17, 23, 13, 12, 20, 9, 21, 15, 25, 25, 
  15, 8, 25, 13, 0, 25, 13, 2, 14, 20, 1, 19, 23, 15, 18, 23, 12, 16, 23, 17, 21, 2, 0, 19, 16, 9, 
  17, 11, 1, 25, 19, 12, 0, 22, 20, 20, 2, 21, 23, 3, 22, 10, 25, 18, 7, 12, 15, 15, 0, 16, 16, 9, 
  13, 9, 9, 8, 1, 10, 2, 17, 21, 17, 12, 9, 10, 22, 1, 20, 21, 1, 9, 22, 19, 2, 15, 13, 8, 11, 19, 
  7, 7, 19, 3, 0, 12, 3, 11, 10, 3, 14, 17, 16, 9, 19, 19, 20, 11, 9, 24, 21, 15, 15, 12, 21, 8, 20, 
  9, 20, 14, 25, 19, 23, 11, 9, 12, 13, 9, 19, 2, 18, 8, 19, 18, 1, 0, 11, 8, 12, 21, 0, 24, 1, 
  -1803047325, 1089940911, 560767494, 1967271302, -1034185847, -143482227, 976714540, -686823289, 
  1383018556, 872818727, 1393952484, 426031655, 1319473860, 1236221682, 1753558494, -674301649, 
  333709014...}
(gdb) step
shuffle (player=0, state=0x610010) at dominion.c:205
205	  int newDeckPos = 0;
(gdb) 
209	  if (state->deckCount[player] < 1)
(gdb) 
211	  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare); 
(gdb) 
214	  while (state->deckCount[player] > 0) {
(gdb) 
215	    card = floor(Random() * state->deckCount[player]);
(gdb) 
Random () at rngs.c:58
58	  const long Q = MODULUS / MULTIPLIER;
(gdb) 
59	  const long R = MODULUS % MULTIPLIER;
(gdb) 
62	  t = MULTIPLIER * (seed[stream] % Q) - R * (seed[stream] / Q);
(gdb) 
63	  if (t > 0) 
(gdb) 
64	    seed[stream] = t;
(gdb) next
67	  return ((double) seed[stream] / MODULUS);
(gdb) 
68	}
(gdb) 
shuffle (player=0, state=0x610010) at dominion.c:216
216	    newDeck[newDeckPos] = state->deck[player][card];
(gdb) 
217	    newDeckPos++;
(gdb) 
218	    for (i = card; i < state->deckCount[player]-1; i++) {
(gdb) 
219	      state->deck[player][i] = state->deck[player][i+1];
(gdb) 
218	    for (i = card; i < state->deckCount[player]-1; i++) {
(gdb) until 220
shuffle (player=0, state=0x610010) at dominion.c:221
221	    state->deckCount[player]--;
(gdb) next
214	  while (state->deckCount[player] > 0) {
(gdb) 
215	    card = floor(Random() * state->deckCount[player]);
(gdb) 
216	    newDeck[newDeckPos] = state->deck[player][card];
(gdb) 
217	    newDeckPos++;
(gdb) 
218	    for (i = card; i < state->deckCount[player]-1; i++) {
(gdb) 
219	      state->deck[player][i] = state->deck[player][i+1];
(gdb) 
218	    for (i = card; i < state->deckCount[player]-1; i++) {
(gdb) until 221
shuffle (player=0, state=0x610010) at dominion.c:221
221	    state->deckCount[player]--;
(gdb) until 222
shuffle (player=0, state=0x610010) at dominion.c:223
223	  for (i = 0; i < newDeckPos; i++) {
(gdb) next
224	    state->deck[player][i] = newDeck[i];
(gdb) 
225	    state->deckCount[player]++;
(gdb) 
223	  for (i = 0; i < newDeckPos; i++) {
(gdb) 
224	    state->deck[player][i] = newDeck[i];
(gdb) 
225	    state->deckCount[player]++;
(gdb) 
223	  for (i = 0; i < newDeckPos; i++) {
(gdb) until 226
shuffle (player=0, state=0x610010) at dominion.c:228
228	  return 0;
(gdb) 
drawCard (player=0, state=0x610010) at dominion.c:548
548	    state->discardCount[player] = 0;
(gdb) print state->deck[player]
$58 = {1, 0, 15, 14, 23, 11, 12, 13, 2, 7, 18, 16, 7, 21, 12, 12, 9, 11, 15, 20, 12, 19, 2, 19, 1, 
  2, 15, 25, 21, 19, 23, 20, 21, 9, 15, 19, 14, 2, 15, 8, 1, 10, 0, 25, 1, 9, 13, 16, 12, 14, 23, 
  17, 11, 1, 20, 10, 9, 9, 9, 19, 18, 20, 12, 0, 0, 0, 18, 20, 25, 19, 10, 11, 8, 22, 9, 11, 25, 25, 
  2, 11, 17, 12, 14, 15, 9, 18, 9, 7, 10, 13, 22, 21, 16, 22, 8, 0, 24, 20, 9, 15, 12, 19, 14, 9, 9, 
  17, 9, 25, 12, 21, 8, 16, 25, 12, 19, 17, 17, 14, 25, 12, 3, 17, 16, 12, 12, 16, 2, 13, 9, 0, 3, 
  8, 0, 8, 17, 20, 15, 11, 18, 15, 19, 8, 21, 1, 8, 19, 19, 1, 21, 3, 13, 14, 0, 21, 23, 14, 21, 8, 
  23, 13, 12, 20, 1, 15, 0, 13, 25, 15, 24, 16, 13, 9, 19, 2, 9, 19, 22, 3, 7, 15, 23, 12, 18, 
  -1803047325, 1089940911, 560767494, 1967271302, -1034185847, -143482227, 976714540, -686823289, 
  1383018556, 872818727, 1393952484, 426031655, 1319473860, 1236221682, 1753558494, -674301649, 
  333709014...}
(gdb) print state->deckCount[player]
$59 = 183
(gdb) next
551	    count = state->handCount[player];//Get current player's hand count
(gdb) print count
$60 = -9616
(gdb) next
557	    deckCounter = state->deckCount[player];//Create a holder for the deck count
(gdb) print count
$61 = 27
(gdb) next
559	    if (deckCounter == 0)
(gdb) print deckCounter
$62 = 183
(gdb) next
562	    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
(gdb) list
557	    deckCounter = state->deckCount[player];//Create a holder for the deck count
558	
559	    if (deckCounter == 0)
560	      return -1;
561	
562	    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
563	    state->deckCount[player]--;
564	    state->handCount[player]++;//Increment hand count
565	  }
566	
(gdb) next
563	    state->deckCount[player]--;
(gdb) print hand[player]
No symbol "hand" in current context.
(gdb) print state->hand[player]
$63 = {45363482, 1669165118, 1061954052, -1294502237, 774714609, 616260853, 2033629132, 9788660, 
  1051261174, -256071833, -403990421, 1297830941, 1931521145, -1637455732, 201702965, 83209568, 
  -263616402, 2123718806, -936661934, -1159142260, 634540734, 906771644, -1802553412, -902971350, 
  1630675565, 1302093808, 4, 18, -1570884252, -1114660069, 1717808811, 1124532666, -1537417953, 
  -1604346055, -134769073, 1997184302, 672636504, -580246490, 1958222059, -2094312594, 292364962, 
  -74119225, 6092253, 1744003410, 1527395177, -1605976876, 495279064, -635066074, 772680772, 
  2054464222, -1055101265, 364119872, -1498047641, 1178983166, 305243675, 541008942, -272829920, 
  494201633, -1114260530, -1338343487, -397100480, -838606099, 1803214299, -974095382, 65419225, 
  -1748507312, 716182939, -62567821, -696521553, 798741662, 944744633, -1279368266, -598012603, 
  -1419269028, 193724933, -261117616, -207729092, -301655096, 648109922, 1689009860, 1652107272, 
  -742852311, 789598678, -677939114, -1440917430, 1681747808, -883047434, -2079002465, 825161386, 
  -1973857048, 860743362, -843810157, 1241961058, 591983323, -1001539766, 690632954, -482796449, 
  -345594363, 2085875146, 628527506, -464405164, 165372498, -722976627, 2029765545, 1743776857, 
  -1686641433, 1762479116, -1682917876, 1292008161, 1977952711, -572569605, -1163628486, 109237029, 
  -1842465757, 1737828833, 2084453487, -1192451247, 386435088, -1482776293, 664212658, -1991598446, 
  1852586764, -290370748, -2028691044, 2128524062, -1138234412, -735644038, -1915871517, -408901485, 
  -90651592, 1881374921, 162914512, -1904734598, -1954466856, 850438213, -2064233017, 1636087565, 
  1238277503, -2087928038, -128281802, -1176176941, -986904768, 2052568662, 1129792266, -262757668, 
  -1537701230, 900621272, -376638894, 1183602960, -1493300561, -160059205, -580014434, -976562064, 
  448532223, -1932695363, 197450002, -922683426, 1352239510, -508862304, -1137772533, 1958150247, 
  1739714563, 1041914047, -1211972846, -133266374, 1024712066, 100778150, -1509821147, 1193842295, 
  -573542201, 1169999094, 928583634, 1266726148, 563245874, 1078712660, 681790027, -1161165876, 
  456548491, -1988913006, 2008656779, -1605805624, 1190971022, -956047600, -202405506, -1644333037, 
  2057560565, 783748875, -148360253, -837500754, -1061468518, 449293574, 310991884, -2136999864, 
  1015918868, 768502972, 739291829, -562490065, 615328723, -773613382, -1607902864...}
(gdb) next
564	    state->handCount[player]++;//Increment hand count
(gdb) 
580	  return 0;
(gdb) 
581	}
(gdb) 
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1257
1257	    *cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
(gdb) 
Hardware watchpoint 9: *cardDrawn

Old value = 1
New value = 18
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
1262	      temphand[z] = (*cardDrawn);
(gdb) 
1263	      state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
(gdb) 
1264	      z++;
(gdb) 
1250	  while( (*drawntreasure) < 2){
(gdb) 
1253	    if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
(gdb) 
1256	    drawCard(currentPlayer, state);
(gdb) 
1257	    *cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
(gdb) 
Hardware watchpoint 9: *cardDrawn

Old value = 18
New value = 12
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) continue
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 12
New value = 23
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 23
New value = 15
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 15
New value = 7
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 7
New value = 3
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 3
New value = 22
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 22
New value = 19
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 19
New value = 9
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 9
New value = 2
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 2
New value = 19
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 19
New value = 9
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 9
New value = 13
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 13
New value = 16
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 16
New value = 24
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 24
New value = 15
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 15
New value = 25
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 25
New value = 13
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 13
New value = 0
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 0
New value = 15
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 15
New value = 1
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 1
New value = 20
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 20
New value = 12
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 12
New value = 13
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 13
New value = 23
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 23
New value = 8
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 8
New value = 21
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 21
New value = 14
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 14
New value = 23
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 23
New value = 21
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 21
New value = 0
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 0
New value = 14
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 14
New value = 13
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 13
New value = 3
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 3
New value = 21
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 21
New value = 1
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 1
New value = 19
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 19
New value = 8
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 8
New value = 1
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 1
New value = 21
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 21
New value = 8
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 8
New value = 19
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 19
New value = 15
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 15
New value = 18
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 18
New value = 11
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 11
New value = 15
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 15
New value = 20
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 20
New value = 17
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 17
New value = 8
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 8
New value = 0
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 0
New value = 8
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 8
New value = 3
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 3
New value = 0
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 0
New value = 9
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 9
New value = 13
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 13
New value = 2
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 2
New value = 16
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 16
New value = 12
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 12
New value = 16
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 16
New value = 17
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 17
New value = 3
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 3
New value = 12
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 12
New value = 25
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 25
New value = 14
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 14
New value = 17
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 17
New value = 19
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 19
New value = 12
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 12
New value = 25
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 25
New value = 16
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 16
New value = 8
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 8
New value = 21
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 21
New value = 12
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 12
New value = 25
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 25
New value = 9
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 9
New value = 17
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 17
New value = 9
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 9
New value = 14
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 14
New value = 19
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 19
New value = 12
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 12
New value = 15
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 15
New value = 9
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 9
New value = 20
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 20
New value = 24
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 24
New value = 0
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 0
New value = 8
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 8
New value = 22
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 22
New value = 16
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 16
New value = 21
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 21
New value = 22
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 22
New value = 13
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 13
New value = 10
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 10
New value = 7
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 7
New value = 9
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 9
New value = 18
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 18
New value = 9
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 9
New value = 15
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 15
New value = 14
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 14
New value = 12
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 12
New value = 17
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 17
New value = 11
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 11
New value = 2
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 2
New value = 25
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 25
New value = 11
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 11
New value = 9
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 9
New value = 22
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 22
New value = 8
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 8
New value = 11
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 11
New value = 10
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 10
New value = 19
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 19
New value = 25
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 25
New value = 20
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 20
New value = 18
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 18
New value = 0
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 0
New value = 12
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 12
New value = 20
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 20
New value = 18
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 18
New value = 19
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 19
New value = 9
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 9
New value = 10
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 10
New value = 20
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 20
New value = 1
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 1
New value = 11
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 11
New value = 17
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 17
New value = 23
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 23
New value = 14
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 14
New value = 12
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 12
New value = 16
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 16
New value = 13
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 13
New value = 9
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 9
New value = 1
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 1
New value = 25
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 25
New value = 0
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 0
New value = 10
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 10
New value = 1
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 1
New value = 8
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 8
New value = 15
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 15
New value = 2
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 2
New value = 14
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 14
New value = 19
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 19
New value = 15
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 15
New value = 9
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 9
New value = 21
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 21
New value = 20
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 20
New value = 23
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 23
New value = 19
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 19
New value = 21
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 21
New value = 25
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 25
New value = 15
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 15
New value = 2
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 2
New value = 1
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 1
New value = 19
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 19
New value = 2
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 2
New value = 19
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 19
New value = 12
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 12
New value = 20
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 20
New value = 15
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 15
New value = 11
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 11
New value = 9
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 9
New value = 12
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 12
New value = 21
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 21
New value = 7
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 7
New value = 16
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 16
New value = 18
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 18
New value = 7
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 7
New value = 2
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 2
New value = 13
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 13
New value = 12
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 12
New value = 11
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 11
New value = 23
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 23
New value = 14
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 14
New value = 15
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 15
New value = 0
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) 
Continuing.
Hardware watchpoint 9: *cardDrawn

Old value = 0
New value = 1
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) step
1262	      temphand[z] = (*cardDrawn);
(gdb) 
1263	      state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
(gdb) 
1264	      z++;
(gdb) print state->handCount[currentPlayer]
$64 = 27
(gdb) print state->hand[currentPlayer]
$65 = {45363482, 1669165118, 1061954052, -1294502237, 774714609, 616260853, 2033629132, 9788660, 
  1051261174, -256071833, -403990421, 1297830941, 1931521145, -1637455732, 201702965, 83209568, 
  -263616402, 2123718806, -936661934, -1159142260, 634540734, 906771644, -1802553412, -902971350, 
  1630675565, 1302093808, 4, 1, -1570884252, -1114660069, 1717808811, 1124532666, -1537417953, 
  -1604346055, -134769073, 1997184302, 672636504, -580246490, 1958222059, -2094312594, 292364962, 
  -74119225, 6092253, 1744003410, 1527395177, -1605976876, 495279064, -635066074, 772680772, 
  2054464222, -1055101265, 364119872, -1498047641, 1178983166, 305243675, 541008942, -272829920, 
  494201633, -1114260530, -1338343487, -397100480, -838606099, 1803214299, -974095382, 65419225, 
  -1748507312, 716182939, -62567821, -696521553, 798741662, 944744633, -1279368266, -598012603, 
  -1419269028, 193724933, -261117616, -207729092, -301655096, 648109922, 1689009860, 1652107272, 
  -742852311, 789598678, -677939114, -1440917430, 1681747808, -883047434, -2079002465, 825161386, 
  -1973857048, 860743362, -843810157, 1241961058, 591983323, -1001539766, 690632954, -482796449, 
  -345594363, 2085875146, 628527506, -464405164, 165372498, -722976627, 2029765545, 1743776857, 
  -1686641433, 1762479116, -1682917876, 1292008161, 1977952711, -572569605, -1163628486, 109237029, 
  -1842465757, 1737828833, 2084453487, -1192451247, 386435088, -1482776293, 664212658, -1991598446, 
  1852586764, -290370748, -2028691044, 2128524062, -1138234412, -735644038, -1915871517, -408901485, 
  -90651592, 1881374921, 162914512, -1904734598, -1954466856, 850438213, -2064233017, 1636087565, 
  1238277503, -2087928038, -128281802, -1176176941, -986904768, 2052568662, 1129792266, -262757668, 
  -1537701230, 900621272, -376638894, 1183602960, -1493300561, -160059205, -580014434, -976562064, 
  448532223, -1932695363, 197450002, -922683426, 1352239510, -508862304, -1137772533, 1958150247, 
  1739714563, 1041914047, -1211972846, -133266374, 1024712066, 100778150, -1509821147, 1193842295, 
  -573542201, 1169999094, 928583634, 1266726148, 563245874, 1078712660, 681790027, -1161165876, 
  456548491, -1988913006, 2008656779, -1605805624, 1190971022, -956047600, -202405506, -1644333037, 
  2057560565, 783748875, -148360253, -837500754, -1061468518, 449293574, 310991884, -2136999864, 
  1015918868, 768502972, 739291829, -562490065, 615328723, -773613382, -1607902864...}
(gdb) step
1250	  while( (*drawntreasure) < 2){
(gdb) 
1253	    if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
(gdb) print state->deckCount[currentPlayer]
$66 = 0
(gdb) step
1254	      shuffle(currentPlayer, state);
(gdb) 
shuffle (player=0, state=0x610010) at dominion.c:205
205	  int newDeckPos = 0;
(gdb) 
209	  if (state->deckCount[player] < 1)
(gdb) 
210	    return -1;
(gdb) 
229	}
(gdb) 
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1256
1256	    drawCard(currentPlayer, state);
(gdb) 
drawCard (player=0, state=0x610010) at dominion.c:528
528	  if (state->deckCount[player] <= 0){//Deck is empty
(gdb) next
533	    for (i = 0; i < state->discardCount[player];i++){
(gdb) 
538	    state->deckCount[player] = state->discardCount[player];
(gdb) 
539	    state->discardCount[player] = 0;//Reset discard
(gdb) print state->deckCount[player
A syntax error in expression, near `'.
(gdb) '
Undefined command: "".  Try "help".
(gdb) print state->deckCount[player]
$67 = 0
(gdb) next
542	    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
(gdb) 
548	    state->discardCount[player] = 0;
(gdb) print state->deckCount[player]
$68 = 0
(gdb) next
551	    count = state->handCount[player];//Get current player's hand count
(gdb) 
557	    deckCounter = state->deckCount[player];//Create a holder for the deck count
(gdb) 
559	    if (deckCounter == 0)
(gdb) 
560	      return -1;
(gdb) 
581	}
(gdb) 
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1257
1257	    *cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
(gdb) 
Hardware watchpoint 9: *cardDrawn

Old value = 1
New value = 4
playAdventurer (state=0x610010, currentPlayer=0, cardDrawn=0x7fffffffe294, temphand=0x7fffffffdac0, 
    drawntreasure=0x7fffffffdab8, zr=0x7fffffffdabc) at dominion.c:1259
1259	    if (*cardDrawn == copper || *cardDrawn == silver || *cardDrawn == gold)
(gdb) exit
Undefined command: "exit".  Try "help".
(gdb) continue
Continuing.

Watchpoint 9 deleted because the program has left the block in
which its expression is valid.
0x0000000000401ac1 in runTest (num=1, failure=0x7fffffffe2c4, special=1)
    at randomtestadventurer.c:137
137		result = playAdventurer(g, player, &cd, temphand, &dtreas, &tmpsize);
(gdb) 
Continuing.
    PASSED TEST 1, Return is 0: returned = 0, expected = 0
    FAILED TEST 2, Pre & post is same: memcmp pre/post = 120, expected = 0
    FAILED TEST 3, discard count matches: pre = 188, post = 191
    FAILED TEST 4, deck count same: pre = 3, post = 0
    PASSED TEST 5, hand count same: pre = 27, post = 27
    PASSED TEST 6, top card in hand same: pre = 4, post = 4
    FAILED TEST 7, top card in deck same: pre = 21, post = -24307644
    PASSED TEST 8, top card in discard same: pre = 10, post = 10

------------ FAILURE - playAdventurer: 4/8 tests passed

[Inferior 1 (process 9063) exited normally]
(gdb) ^CQuit
(gdb) ^CQuit
(gdb) ^CQuit
(gdb) end
This command cannot be used at the top level.
(gdb) help
List of classes of commands:

aliases -- Aliases of other commands
breakpoints -- Making program stop at certain points
data -- Examining data
files -- Specifying and examining files
internals -- Maintenance commands
obscure -- Obscure features
running -- Running the program
stack -- Examining the stack
status -- Status inquiries
support -- Support facilities
tracepoints -- Tracing of program execution without stopping the program
user-defined -- User-defined commands

Type "help" followed by a class name for a list of commands in that class.
Type "help all" for the list of all commands.
Type "help" followed by command name for full documentation.
Type "apropos word" to search for commands related to "word".
Command name abbreviations are allowed if unambiguous.
(gdb) stop
(gdb) quit
